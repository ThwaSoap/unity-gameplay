<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE dotfuscatorMap SYSTEM "http://www.preemptive.com/dotfuscator/dtd/dotfuscatorMap_v1.2.dtd">
<dotfuscatorMap version="1.1">
    <header>
        <timestamp>2020-04-05T16:56:19</timestamp>
        <product version="5.44.0.10087" user="未注册 " serial="000-00-000-391">Dotfuscator Community</product>
    </header>
    <mapping>
        <module>
            <name>GamePlay.Manager.dll</name>
            <type>
                <name>GamePlay.DBContent</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>Container</name>
                    </method>
                    <method>
                        <signature>GamePlay.DBValue(int32)</signature>
                        <name>Get</name>
                    </method>
                    <method>
                        <signature>GamePlay.DBValue(string)</signature>
                        <name>Get</name>
                    </method>
                    <method>
                        <signature>int32(string)</signature>
                        <name>Index</name>
                    </method>
                    <method>
                        <signature>bool(string, GamePlay.DBValue&amp;)</signature>
                        <name>TryGet</name>
                    </method>
                    <method>
                        <signature>GamePlay.DBValue(int32)</signature>
                        <name>get_Item</name>
                    </method>
                    <method>
                        <signature>GamePlay.DBValue(string)</signature>
                        <name>get_Item</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Length</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>get_PropertysNames</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>set_PropertysNames</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>&lt;PropertysNames&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;GamePlay.DBValue&gt;</signature>
                        <name>Values</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>GamePlay.DBValue(int32)</signature>
                        <name>Item</name>
                    </property>
                    <property>
                        <signature>GamePlay.DBValue(string)</signature>
                        <name>Item</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Length</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>PropertysNames</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GamePlay.DBContent/&lt;&gt;c__DisplayClass11_0</name>
                <newname>GamePlay.DBContent/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>&lt;Container&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>_name</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.DBContent/&lt;&gt;c__DisplayClass12_0</name>
                <newname>GamePlay.DBContent/c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>&lt;Index&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>_name</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.DBContent/&lt;&gt;c__DisplayClass8_0</name>
                <newname>GamePlay.DBContent/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>&lt;get_Item&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>_name</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.DBValue</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>GetBoolByObject</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>GetDoubleByObject</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>!!0()</signature>
                        <name>GetEnum</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>GetFloatByObject</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetIntByObject</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>GetLongByObject</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>int16()</signature>
                        <name>GetShortByObject</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>GetStringByObject</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>SToB</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>float64(string)</signature>
                        <name>SToD</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>float32(string)</signature>
                        <name>SToF</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>int32(string)</signature>
                        <name>SToI</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>int64(string)</signature>
                        <name>SToL</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>int16(string)</signature>
                        <name>SToSh</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>SetBoolValue</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>SetDoubleValue</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>void(!!0)</signature>
                        <name>SetEnum</name>
                    </method>
                    <method>
                        <signature>void(float32)</signature>
                        <name>SetFloatValue</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>SetIntValue</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>SetLongValue</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>SetShortValue</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>SetStringValue</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Bool</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_DefaultValue</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_Double</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_Float</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Int</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_Long</name>
                    </method>
                    <method>
                        <signature>int16()</signature>
                        <name>get_Short</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_String</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Bool</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_DefaultValue</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_Double</name>
                    </method>
                    <method>
                        <signature>void(float32)</signature>
                        <name>set_Float</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Int</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_Long</name>
                    </method>
                    <method>
                        <signature>void(int16)</signature>
                        <name>set_Short</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_String</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>&lt;DefaultValue&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>Bool</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>DefaultValue</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>Double</name>
                    </property>
                    <property>
                        <signature>float32()</signature>
                        <name>Float</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Int</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>Long</name>
                    </property>
                    <property>
                        <signature>int16()</signature>
                        <name>Short</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>String</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GamePlay.ELoadLevelMode</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>GamePlay.ELoadLevelMode</signature>
                        <name>AdditiveMainLevel</name>
                    </field>
                    <field>
                        <signature>GamePlay.ELoadLevelMode</signature>
                        <name>AdditiveSubLevel</name>
                    </field>
                    <field>
                        <signature>GamePlay.ELoadLevelMode</signature>
                        <name>END</name>
                    </field>
                    <field>
                        <signature>GamePlay.ELoadLevelMode</signature>
                        <name>MergeToMainLevel</name>
                    </field>
                    <field>
                        <signature>GamePlay.ELoadLevelMode</signature>
                        <name>ReplaceMainLevel</name>
                    </field>
                    <field>
                        <signature>GamePlay.ELoadLevelMode</signature>
                        <name>SingleMainLevel</name>
                    </field>
                    <field>
                        <signature>GamePlay.ELoadLevelMode</signature>
                        <name>SingleSubLevel</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.EOpenMode</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>GamePlay.EOpenMode</signature>
                        <name>Additive</name>
                    </field>
                    <field>
                        <signature>GamePlay.EOpenMode</signature>
                        <name>Single</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.EStageStatus</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>GamePlay.EStageStatus</signature>
                        <name>Loading</name>
                    </field>
                    <field>
                        <signature>GamePlay.EStageStatus</signature>
                        <name>Resting</name>
                    </field>
                    <field>
                        <signature>GamePlay.EStageStatus</signature>
                        <name>Unload</name>
                    </field>
                    <field>
                        <signature>GamePlay.EStageStatus</signature>
                        <name>Working</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.EUIExitMode</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>GamePlay.EUIExitMode</signature>
                        <name>DelayDestroy</name>
                    </field>
                    <field>
                        <signature>GamePlay.EUIExitMode</signature>
                        <name>JustHidden</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.FileVersionRemoteObject</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;GamePlay.UFileVersionRemote&gt;</signature>
                        <name>List</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.IAssetBundleLoader</name>
                <methodlist>
                    <method>
                        <arity>1</arity>
                        <signature>!!0(string, string, string)</signature>
                        <name>LoadAsset</name>
                    </method>
                    <method>
                        <signature>UnityEngine.Object(System.Type, string, string, string)</signature>
                        <name>LoadAsset</name>
                    </method>
                    <method>
                        <signature>GamePlay.UResourceRequest(System.Type, string, string, string, System.Action`1&lt;UnityEngine.Object&gt;)</signature>
                        <name>LoadAssetAsync</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>GamePlay.UResourceRequest(string, string, string, System.Action`1&lt;!!0&gt;)</signature>
                        <name>LoadAssetAsync</name>
                    </method>
                    <method>
                        <signature>GamePlay.UAsyncOperation(string, string, string, GamePlay.ELoadLevelMode, System.Action)</signature>
                        <name>LoadLevel</name>
                    </method>
                    <method>
                        <signature>GamePlay.UAsyncOperation(string, string, string, GamePlay.ELoadLevelMode, System.Action)</signature>
                        <name>LoadLevelAsync</name>
                    </method>
                    <method>
                        <signature>void(string, string, bool)</signature>
                        <name>UnloadAsset</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.IAssetRequest</name>
                <methodlist>
                    <method>
                        <signature>UnityEngine.AudioClip()</signature>
                        <name>get_audioClip</name>
                    </method>
                    <method>
                        <signature>UnityEngine.GameObject()</signature>
                        <name>get_gameObject</name>
                    </method>
                    <method>
                        <signature>UnityEngine.Sprite()</signature>
                        <name>get_sprite</name>
                    </method>
                    <method>
                        <signature>UnityEngine.TextAsset()</signature>
                        <name>get_textAsset</name>
                    </method>
                    <method>
                        <signature>UnityEngine.Texture2D()</signature>
                        <name>get_texture2D</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>UnityEngine.AudioClip()</signature>
                        <name>audioClip</name>
                    </property>
                    <property>
                        <signature>UnityEngine.GameObject()</signature>
                        <name>gameObject</name>
                    </property>
                    <property>
                        <signature>UnityEngine.Sprite()</signature>
                        <name>sprite</name>
                    </property>
                    <property>
                        <signature>UnityEngine.TextAsset()</signature>
                        <name>textAsset</name>
                    </property>
                    <property>
                        <signature>UnityEngine.Texture2D()</signature>
                        <name>texture2D</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GamePlay.IGameInstance</name>
                <methodlist>
                    <method>
                        <signature>void(GamePlay.UGameManager)</signature>
                        <name>Close</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetLocalContentRoot</name>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator(GamePlay.UGameManager, object)</signature>
                        <name>Open</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.IGameManagerParent</name>
                <methodlist>
                    <method>
                        <signature>string()</signature>
                        <name>GetLocalContentRoot</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.ILevelLoader</name>
                <methodlist>
                    <method>
                        <signature>GamePlay.UAsyncOperation(string, GamePlay.ELoadLevelMode, System.Action)</signature>
                        <name>LoadLevel</name>
                    </method>
                    <method>
                        <signature>GamePlay.UAsyncOperation(string, GamePlay.ELoadLevelMode, System.Action)</signature>
                        <name>LoadLevelAsync</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>UnloadAsset</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.ILog</name>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>Error</name>
                    </method>
                    <method>
                        <signature>void(string, object[])</signature>
                        <name>Error</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>Log</name>
                    </method>
                    <method>
                        <signature>void(string, object[])</signature>
                        <name>Log</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>Warning</name>
                    </method>
                    <method>
                        <signature>void(string, object[])</signature>
                        <name>Warning</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.IStartupOperation</name>
                <methodlist>
                    <method>
                        <signature>System.Collections.IEnumerator(GamePlay.UGameManager)</signature>
                        <name>Load</name>
                    </method>
                    <method>
                        <signature>void(GamePlay.UGameManager)</signature>
                        <name>Unload</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Priority</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>Priority</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.AppPublishContentLoader</name>
                <newname>be</newname>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, System.Func`2&lt;unsigned int8[],unsigned int8[]&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(GamePlay.UAsyncOperation)</signature>
                        <name>GetContent</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator(GamePlay.UAsyncOperation)</signature>
                        <name>LoadAsset</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Content</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsSuccess</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_Progress</name>
                    </method>
                    <method>
                        <signature>System.Func`2&lt;unsigned int8[],unsigned int8[]&gt;()</signature>
                        <name>get_UnpackKeystore</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Content</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsSuccess</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>void(System.Func`2&lt;unsigned int8[],unsigned int8[]&gt;)</signature>
                        <name>set_UnpackKeystore</name>
                        <newname>v</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Content&gt;k__BackingField</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsSuccess&gt;k__BackingField</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;unsigned int8[],unsigned int8[]&gt;</signature>
                        <name>&lt;UnpackKeystore&gt;k__BackingField</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>GamePlay.UAsyncOperation</signature>
                        <name>Request</name>
                        <newname>s</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.AppPublishContentLoader/&lt;LoadAsset&gt;d__18</name>
                <newname>be/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;System.Object&gt;.get_Current</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>GamePlay.Internal.AppPublishContentLoader</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>GamePlay.UAsyncOperation</signature>
                        <name>_operation</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.CommandContext</name>
                <newname>aw</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(System.Type, System.Reflection.MethodInfo, System.Func`3&lt;System.Type,string,object&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(System.Type, string)</signature>
                        <name>ConvertStringToObject</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>GamePlay.Internal.CommandContextExecuted(string)</signature>
                        <name>Execute</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>GamePlay.Internal.CommandContextExecuted(string[])</signature>
                        <name>Execute</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(object[])</signature>
                        <name>Execute</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>bool(string[], object[]&amp;, string&amp;)</signature>
                        <name>GetParamsValue</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string(object[])</signature>
                        <name>ObjectQueueToString</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>bool(System.Reflection.ParameterInfo, string&amp;, string&amp;, bool)</signature>
                        <name>TryGetArgs</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>bool(string&amp;, string&amp;, char)</signature>
                        <name>TryGetObjectContent</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ClassName</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>System.Type()</signature>
                        <name>get_ClassType</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>System.Reflection.MethodInfo()</signature>
                        <name>get_Method</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MethodName</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ParamsContext</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void(System.Type)</signature>
                        <name>set_ClassType</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(System.Reflection.MethodInfo)</signature>
                        <name>set_Method</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ParamsContext</name>
                        <newname>f</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Type</signature>
                        <name>&lt;ClassType&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Reflection.MethodInfo</signature>
                        <name>&lt;Method&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ParamsContext&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Func`3&lt;System.Type,string,object&gt;</signature>
                        <name>Convert</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>bool[]</signature>
                        <name>IsSimple</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Reflection.ParameterInfo[]</signature>
                        <name>Params</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;System.Type&gt;</signature>
                        <name>SimpleTypes</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;char,char&gt;</signature>
                        <name>Tags</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Type</signature>
                        <name>strType</name>
                        <newname>i</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.CommandContextExecuted</name>
                <newname>av</newname>
                <methodlist>
                    <method>
                        <signature>void(GamePlay.Internal.ICommandContext, object[], string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object[]()</signature>
                        <name>get_Args</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ArgsContext</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>GamePlay.Internal.ICommandContext()</signature>
                        <name>get_CommandContext</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(object[])</signature>
                        <name>set_Args</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ArgsContext</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(GamePlay.Internal.ICommandContext)</signature>
                        <name>set_CommandContext</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object[]</signature>
                        <name>&lt;Args&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ArgsContext&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>GamePlay.Internal.ICommandContext</signature>
                        <name>&lt;CommandContext&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.Config</name>
                <newname>ar</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Clear</name>
                    </method>
                    <method>
                        <signature>bool(string&amp;, string)</signature>
                        <name>CreateContent</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>!!0(string)</signature>
                        <name>Get</name>
                    </method>
                    <method>
                        <signature>string(object)</signature>
                        <name>GetObjectContent</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Reflection.FieldInfo(System.Type, string)</signature>
                        <name>GetStorageField</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Type[])</signature>
                        <name>Initialized</name>
                    </method>
                    <method>
                        <signature>bool(string, string)</signature>
                        <name>LoadData</name>
                    </method>
                    <method>
                        <signature>bool(System.Collections.Generic.List`1&lt;GamePlay.Internal.DBProperty&gt;&amp;, System.Type)</signature>
                        <name>MakeValidPropertys</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>bool(!!0&amp;, string)</signature>
                        <name>TryGet</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>UnloadData</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;System.Type&gt;</signature>
                        <name>ConfigTypes</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>GamePlay.Internal.DBPropertyConvertForDB</signature>
                        <name>ConvertBase</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,System.Collections.Generic.List`1&lt;object&gt;&gt;</signature>
                        <name>Datas</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                </genericparameter>
                <name>GamePlay.Internal.Config/&lt;&gt;c__7`1</name>
                <newname>ar/&lt;&gt;c__7`1</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>&lt;Get&gt;b__7_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GamePlay.Internal.Config/&lt;&gt;c__7`1&lt;!0&gt;</signature>
                        <name>&lt;&gt;9</name>
                    </field>
                    <field>
                        <signature>System.Predicate`1&lt;object&gt;</signature>
                        <name>&lt;&gt;9__7_0</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.Config/&lt;&gt;c__DisplayClass5_0</name>
                <newname>ar/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(System.Type)</signature>
                        <name>&lt;LoadData&gt;b__0</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Predicate`1&lt;System.Type&gt;</signature>
                        <name>&lt;&gt;9__0</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>temp</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.Config/&lt;&gt;c__DisplayClass5_1</name>
                <newname>ar/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>&lt;LoadData&gt;b__1</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Type</signature>
                        <name>type</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.Config/&lt;&gt;c__DisplayClass5_2</name>
                <newname>ar/c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(GamePlay.Internal.DBProperty)</signature>
                        <name>&lt;LoadData&gt;b__2</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>property</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.DBCommand</name>
                <newname>r</newname>
                <methodlist>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;GamePlay.Internal.IProperty&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>bool(System.Collections.Generic.List`1&lt;!!0&gt;&amp;, !!0)</signature>
                        <name>FirstSearching</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(string, string, string&amp;, int32&amp;)</signature>
                        <name>ParseCommandHeader</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(string, string&amp;, string&amp;)</signature>
                        <name>ParseConditionOperator</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(string, string&amp;, GamePlay.Internal.IProperty&amp;)</signature>
                        <name>ParseProperty</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(string, GamePlay.Internal.IProperty, string&amp;, System.Func`3&lt;object,object,bool&gt;&amp;)</signature>
                        <name>ParseSign</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(string, GamePlay.Internal.IProperty, string&amp;, object&amp;)</signature>
                        <name>ParseValue</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>System.Collections.Generic.List`1&lt;!!0&gt;(!!0[])</signature>
                        <name>Search</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>SetCommand</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_FirstSearch</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_LastSearch</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_FirstSearch</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_LastSearch</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>ApplyFirstSearch</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>ApplyLastSearch</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;GamePlay.Internal.DBCondition&gt;</signature>
                        <name>Conditions</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>FirstCount</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>LastCount</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;GamePlay.Internal.IProperty&gt;</signature>
                        <name>Propertys</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.DBCondition</name>
                <newname>s</newname>
                <methodlist>
                    <method>
                        <signature>void(GamePlay.Internal.IProperty, object, System.Func`3&lt;object,object,bool&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>IsPass</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(GamePlay.Internal.DBCondition)</signature>
                        <name>SetNextCondition</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>GamePlay.Internal.DBCondition()</signature>
                        <name>get_Last</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`3&lt;object,object,bool&gt;</signature>
                        <name>Compare</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>GamePlay.Internal.DBCondition</signature>
                        <name>NextCondition</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>GamePlay.Internal.IProperty</signature>
                        <name>Property</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>Value</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.DBContentDynamic</name>
                <newname>t</newname>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, GamePlay.DBValue)</signature>
                        <name>AddProperty</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ClassName</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ClassName</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ClassName&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.DBDataBool</name>
                <newname>u</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string, object&amp;)</signature>
                        <name>GetData</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(string)</signature>
                        <name>OnIndexOf</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.DBDataDouble</name>
                <newname>aa</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string, object&amp;)</signature>
                        <name>GetData</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.DBDataEnum</name>
                <newname>ab</newname>
                <methodlist>
                    <method>
                        <signature>void(System.Type)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string, object&amp;)</signature>
                        <name>GetData</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.DBDataFloat</name>
                <newname>z</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string, object&amp;)</signature>
                        <name>GetData</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.DBDataInt</name>
                <newname>x</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string, object&amp;)</signature>
                        <name>GetData</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.DBDataLong</name>
                <newname>y</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string, object&amp;)</signature>
                        <name>GetData</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.DBDataNumber</name>
                <newname>v</newname>
                <methodlist>
                    <method>
                        <signature>void(System.Type)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(object, object)</signature>
                        <name>CompareBoth</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>bool(object, object)</signature>
                        <name>Greater</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool(object, object)</signature>
                        <name>GreaterEquals</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(object, object)</signature>
                        <name>Less</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(object, object)</signature>
                        <name>LessEquals</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(string)</signature>
                        <name>OnIndexOf</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.DBDataShort</name>
                <newname>w</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string, object&amp;)</signature>
                        <name>GetData</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.DBDataString</name>
                <newname>ac</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object, object)</signature>
                        <name>Container</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool(object, object)</signature>
                        <name>ContainerCase</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(object, object)</signature>
                        <name>EndWith</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>bool(object, object)</signature>
                        <name>EndWithCase</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(string, object&amp;)</signature>
                        <name>GetData</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(string)</signature>
                        <name>OnIndexOf</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(object, object)</signature>
                        <name>StartWith</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>bool(object, object)</signature>
                        <name>StartWithCase</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.DBDataType</name>
                <newname>ad</newname>
                <methodlist>
                    <method>
                        <signature>void(System.Type)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, System.Func`3&lt;object,object,bool&gt;)</signature>
                        <name>AddCompare</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(string)</signature>
                        <name>GamePlay.Internal.IDataType.CheckoutContentLength</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string, System.Func`3&lt;object,object,bool&gt;&amp;)</signature>
                        <name>GamePlay.Internal.IDataType.GetCompare</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string, object&amp;)</signature>
                        <name>GamePlay.Internal.IDataType.GetValue</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Type()</signature>
                        <name>GamePlay.Internal.IDataType.get_BaseType</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>GamePlay.Internal.IDataType.get_Signs</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(string, object&amp;)</signature>
                        <name>GetData</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(object, object)</signature>
                        <name>IsEquals</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(object, object)</signature>
                        <name>NotEquals</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(string)</signature>
                        <name>OnIndexOf</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SortSigns</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;GamePlay.Internal.DBDataType/Compare&gt;</signature>
                        <name>CompareQueue</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Type</signature>
                        <name>DataType</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>Signs</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.DBDataType/&lt;&gt;c</name>
                <newname>ad/&lt;&gt;c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(string, string)</signature>
                        <name>&lt;SortSigns&gt;b__5_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GamePlay.Internal.DBDataType/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                    </field>
                    <field>
                        <signature>System.Comparison`1&lt;string&gt;</signature>
                        <name>&lt;&gt;9__5_0</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.DBDataType/&lt;&gt;c__DisplayClass14_0</name>
                <newname>ad/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(GamePlay.Internal.DBDataType/Compare)</signature>
                        <name>&lt;GamePlay.Internal.IDataType.GetCompare&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>_sign</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.DBDataType/Compare</name>
                <newname>ad/a</newname>
                <methodlist>
                    <method>
                        <signature>void(string, System.Func`3&lt;object,object,bool&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Func`3&lt;object,object,bool&gt;()</signature>
                        <name>get_OnCompare</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Sign</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(System.Func`3&lt;object,object,bool&gt;)</signature>
                        <name>set_OnCompare</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Sign</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`3&lt;object,object,bool&gt;</signature>
                        <name>&lt;OnCompare&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Sign&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.DBProperty</name>
                <newname>ae</newname>
                <methodlist>
                    <method>
                        <signature>void(GamePlay.Internal.DBPropertyConvertInfo)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(string)</signature>
                        <name>GamePlay.Internal.IProperty.CheckoutContentLength</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>object(object)</signature>
                        <name>GamePlay.Internal.IProperty.PropertyValue</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(string, System.Func`3&lt;object,object,bool&gt;&amp;)</signature>
                        <name>GamePlay.Internal.IProperty.TryGetCompare</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string, object&amp;)</signature>
                        <name>GamePlay.Internal.IProperty.TryGetValue</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GamePlay.Internal.IProperty.get_PropertyName</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Type()</signature>
                        <name>GamePlay.Internal.IProperty.get_PropertyType</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GamePlay.Internal.IProperty.get_PropertyTypeName</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>GamePlay.Internal.IProperty.get_Signs</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetName</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string(object)</signature>
                        <name>GetValue</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>object(object)</signature>
                        <name>ReadValue</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(object, string)</signature>
                        <name>SetValue</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, object)</signature>
                        <name>WriteValue</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GamePlay.Internal.DBPropertyConvertInfo</signature>
                        <name>ConvertInfo</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.DBPropertyConvert</name>
                <newname>ai</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(object)</signature>
                        <name>ObjectTo</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>object(string)</signature>
                        <name>ToBool</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>object(string)</signature>
                        <name>ToDouble</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>object(System.Type, string)</signature>
                        <name>ToEnum</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>object(string)</signature>
                        <name>ToFloat</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object(string)</signature>
                        <name>ToInt</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>object(string)</signature>
                        <name>ToLong</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>object(string)</signature>
                        <name>ToShort</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;GamePlay.Internal.DBPropertyConvertInfo&gt;</signature>
                        <name>Infos</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.DBPropertyConvert/&lt;&gt;c</name>
                <newname>ai/&lt;&gt;c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(string)</signature>
                        <name>&lt;.ctor&gt;b__1_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(object)</signature>
                        <name>&lt;.ctor&gt;b__1_1</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GamePlay.Internal.DBPropertyConvert/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,object&gt;</signature>
                        <name>&lt;&gt;9__1_0</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;object,string&gt;</signature>
                        <name>&lt;&gt;9__1_1</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.DBPropertyConvertForDB</name>
                <newname>ak</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>GamePlay.Internal.DBPropertyConvertInfo(System.Type)</signature>
                        <name>FindBaseInfo</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>bool(System.Type)</signature>
                        <name>IsArrayEnum</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(System.Type)</signature>
                        <name>IsListEnum</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.DBPropertyConvertForDB/&lt;&gt;c__DisplayClass0_0</name>
                <newname>ak/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(GamePlay.Internal.DBPropertyConvertInfo)</signature>
                        <name>&lt;FindBaseInfo&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Type</signature>
                        <name>_type</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.DBPropertyConvertForStorage</name>
                <newname>am</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>GamePlay.Internal.DBPropertyConvertInfo(string)</signature>
                        <name>FindBaseInfo</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(System.Type[])</signature>
                        <name>GamePlay.Internal.IDBPropertyConvertForStorage.InitializedCustomEnum</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;System.Type&gt;</signature>
                        <name>CustomEnum</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.DBPropertyConvertForStorage/&lt;&gt;c__DisplayClass2_0</name>
                <newname>am/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(GamePlay.Internal.DBPropertyConvertInfo)</signature>
                        <name>&lt;FindBaseInfo&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(System.Type)</signature>
                        <name>&lt;FindBaseInfo&gt;b__1</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>_typeName</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.DBPropertyConvertInfo</name>
                <newname>ah</newname>
                <methodlist>
                    <method>
                        <signature>void(System.Type, string, GamePlay.Internal.IDataType, System.Func`2&lt;object,string&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Type, string, GamePlay.Internal.IDataType, System.Func`2&lt;string,object&gt;, System.Func`2&lt;object,string&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(string)</signature>
                        <name>ForEnum</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>IsType</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>System.Type()</signature>
                        <name>get_BaseType</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>GamePlay.Internal.IDataType()</signature>
                        <name>get_DataType</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>System.Func`2&lt;string,object&gt;()</signature>
                        <name>get_OnConvertToObject</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>System.Func`2&lt;object,string&gt;()</signature>
                        <name>get_OnConvertToStirng</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TypeName</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(System.Type)</signature>
                        <name>set_BaseType</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(GamePlay.Internal.IDataType)</signature>
                        <name>set_DataType</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(System.Func`2&lt;string,object&gt;)</signature>
                        <name>set_OnConvertToObject</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(System.Func`2&lt;object,string&gt;)</signature>
                        <name>set_OnConvertToStirng</name>
                        <newname>f</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Type</signature>
                        <name>&lt;BaseType&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>GamePlay.Internal.IDataType</signature>
                        <name>&lt;DataType&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,object&gt;</signature>
                        <name>&lt;OnConvertToObject&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;object,string&gt;</signature>
                        <name>&lt;OnConvertToStirng&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SubName</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.DBPropertyStorage</name>
                <newname>an</newname>
                <methodlist>
                    <method>
                        <signature>void(string, int32, GamePlay.Internal.DBPropertyConvertInfo)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(string)</signature>
                        <name>GamePlay.Internal.IProperty.CheckoutContentLength</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>object(object)</signature>
                        <name>GamePlay.Internal.IProperty.PropertyValue</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(string, System.Func`3&lt;object,object,bool&gt;&amp;)</signature>
                        <name>GamePlay.Internal.IProperty.TryGetCompare</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string, object&amp;)</signature>
                        <name>GamePlay.Internal.IProperty.TryGetValue</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GamePlay.Internal.IProperty.get_PropertyName</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Type()</signature>
                        <name>GamePlay.Internal.IProperty.get_PropertyType</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GamePlay.Internal.IProperty.get_PropertyTypeName</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>GamePlay.Internal.IProperty.get_Signs</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetName</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(object)</signature>
                        <name>GetValue</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, string)</signature>
                        <name>SetValue</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GamePlay.Internal.DBPropertyConvertInfo</signature>
                        <name>ConvertInfo</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>FieldIndex</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FieldName</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.DBValueDynamic</name>
                <newname>ao</newname>
                <methodlist>
                    <method>
                        <signature>void(GamePlay.Internal.DBPropertyConvertInfo, string, bool, object)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FieldName</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_StringValue</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>GamePlay.Internal.DBPropertyConvertInfo()</signature>
                        <name>get_ValueType</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FieldName</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(GamePlay.Internal.DBPropertyConvertInfo)</signature>
                        <name>set_ValueType</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;FieldName&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>GamePlay.Internal.DBPropertyConvertInfo</signature>
                        <name>&lt;ValueType&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>IsUseStringToken</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.DataCache</name>
                <newname>as</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ClearCache</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string, object)</signature>
                        <name>SaveToCache</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string, object&amp;)</signature>
                        <name>TryGetout</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,GamePlay.Internal.DataCache/DataBatch&gt;</signature>
                        <name>Cache</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.DataCache/DataBatch</name>
                <newname>as/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>DataSet</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.DownloadFileList</name>
                <newname>bh</newname>
                <methodlist>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;GamePlay.UFileVersionRemote&gt;, string, string, string, System.Action`1&lt;GamePlay.UUpdateProgress&gt;, System.Action`2&lt;bool,string&gt;, bool, System.Action`1&lt;string&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator(System.Collections.Generic.List`1&lt;GamePlay.UFileVersionRemote&gt;, string, string, string, System.Action`2&lt;bool,string&gt;, bool, System.Action`1&lt;string&gt;)</signature>
                        <name>DoStart</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int64, unsigned int64, int32, int32, unsigned int64, float32, string, string)</signature>
                        <name>RefreshProgress</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>unsigned int64(System.Collections.Generic.List`1&lt;GamePlay.UFileVersionRemote&gt;)</signature>
                        <name>Sum</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Error</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsSuccess</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Error</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsSuccess</name>
                        <newname>v</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Error&gt;k__BackingField</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsSuccess&gt;k__BackingField</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>System.Action`1&lt;GamePlay.UUpdateProgress&gt;</signature>
                        <name>OnProgressChanged</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>GamePlay.UUpdateProgress</signature>
                        <name>ProgressInformation</name>
                        <newname>w</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.DownloadFileList/&lt;DoStart&gt;d__13</name>
                <newname>bh/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;System.Object&gt;.get_Current</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>GamePlay.Internal.DownloadFileList</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1/Enumerator&lt;GamePlay.UFileVersionRemote&gt;</signature>
                        <name>&lt;&gt;7__wrap14</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>&lt;allBytes&gt;5__3</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Networking.UnityWebRequestAsyncOperation</signature>
                        <name>&lt;asyncSend&gt;5__14</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;GamePlay.UFileVersionRemote&gt;</signature>
                        <name>&lt;copyList&gt;5__2</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>&lt;downloadAllByte&gt;5__5</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>&lt;downloadingByte&gt;5__4</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;file&gt;5__10</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;fileCount&gt;5__6</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;i&gt;5__11</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>GamePlay.UFileVersionRemote</signature>
                        <name>&lt;info&gt;5__12</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;module&gt;5__9</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>&lt;progressRatio&gt;5__7</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Networking.UnityWebRequest</signature>
                        <name>&lt;request&gt;5__13</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>&lt;tempFiles&gt;5__8</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_breakOnDownloadFailing</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Action`2&lt;bool,string&gt;</signature>
                        <name>_completed</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_downloadAddress</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;GamePlay.UFileVersionRemote&gt;</signature>
                        <name>_fileList</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Action`1&lt;string&gt;</signature>
                        <name>_onDebug</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_persistentPathRoot</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_tempPathRoot</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.EDownloadState</name>
                <newname>ba</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>GamePlay.Internal.EDownloadState</signature>
                        <name>Downloading</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>GamePlay.Internal.EDownloadState</signature>
                        <name>Fail</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>GamePlay.Internal.EDownloadState</signature>
                        <name>Success</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.EWorkerState</name>
                <newname>a8</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>GamePlay.Internal.EWorkerState</signature>
                        <name>Exiting</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>GamePlay.Internal.EWorkerState</signature>
                        <name>Loading</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>GamePlay.Internal.EWorkerState</signature>
                        <name>Resting</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>GamePlay.Internal.EWorkerState</signature>
                        <name>Working</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.FileVersionUpdateInfo</name>
                <newname>bb</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Action`1&lt;GamePlay.URemoteVersionRequest&gt;</signature>
                        <name>Completed</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>LastUpdate</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>GamePlay.URemoteVersionRequest</signature>
                        <name>Request</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>GamePlay.Internal.EDownloadState</signature>
                        <name>State</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.IAssetBundleLoaderProxy</name>
                <newname>b</newname>
                <methodlist>
                    <method>
                        <arity>1</arity>
                        <signature>!!0(string, string)</signature>
                        <name>LoadAsset</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Object(System.Type, string, string)</signature>
                        <name>LoadAsset</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>GamePlay.UResourceRequest(System.Type, string, string, System.Action`1&lt;UnityEngine.Object&gt;)</signature>
                        <name>LoadAssetAsync</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>GamePlay.UResourceRequest(string, string, System.Action`1&lt;!!0&gt;)</signature>
                        <name>LoadAssetAsync</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>GamePlay.UAsyncOperation(string, string, GamePlay.ELoadLevelMode, System.Action)</signature>
                        <name>LoadLevel</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>GamePlay.UAsyncOperation(string, string, GamePlay.ELoadLevelMode, System.Action)</signature>
                        <name>LoadLevelAsync</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string, bool)</signature>
                        <name>UnloadAsset</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.ICommandContext</name>
                <newname>at</newname>
                <methodlist>
                    <method>
                        <signature>string()</signature>
                        <name>get_ClassName</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MethodName</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ParamsContext</name>
                        <newname>m</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.ICommandContextExecuted</name>
                <newname>au</newname>
                <methodlist>
                    <method>
                        <signature>string()</signature>
                        <name>get_ArgsContext</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>GamePlay.Internal.ICommandContext()</signature>
                        <name>get_CommandContext</name>
                        <newname>i</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.IDBPropertyConvertForDB</name>
                <newname>aj</newname>
                <methodlist>
                    <method>
                        <signature>GamePlay.Internal.DBPropertyConvertInfo(System.Type)</signature>
                        <name>FindBaseInfo</name>
                        <newname>g</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.IDBPropertyConvertForStorage</name>
                <newname>al</newname>
                <methodlist>
                    <method>
                        <signature>GamePlay.Internal.DBPropertyConvertInfo(string)</signature>
                        <name>FindBaseInfo</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(System.Type[])</signature>
                        <name>InitializedCustomEnum</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.IDataType</name>
                <newname>ap</newname>
                <methodlist>
                    <method>
                        <signature>int32(string)</signature>
                        <name>CheckoutContentLength</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool(string, System.Func`3&lt;object,object,bool&gt;&amp;)</signature>
                        <name>GetCompare</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool(string, object&amp;)</signature>
                        <name>GetValue</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Type()</signature>
                        <name>get_BaseType</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>get_Signs</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.IProperty</name>
                <newname>aq</newname>
                <methodlist>
                    <method>
                        <signature>int32(string)</signature>
                        <name>CheckoutContentLength</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>object(object)</signature>
                        <name>PropertyValue</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>bool(string, System.Func`3&lt;object,object,bool&gt;&amp;)</signature>
                        <name>TryGetCompare</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>bool(string, object&amp;)</signature>
                        <name>TryGetValue</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_PropertyName</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>System.Type()</signature>
                        <name>get_PropertyType</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_PropertyTypeName</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>get_Signs</name>
                        <newname>j</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.IStage</name>
                <newname>a1</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>Close</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>GamePlay.UAsyncOperation()</signature>
                        <name>Load</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Open</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Unload</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Update</name>
                    </method>
                    <method>
                        <signature>GamePlay.EStageStatus()</signature>
                        <name>get_NextState</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>GamePlay.UAsyncOperation()</signature>
                        <name>get_Progress</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>GamePlay.EStageStatus()</signature>
                        <name>get_State</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(GamePlay.EStageStatus)</signature>
                        <name>set_NextState</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(GamePlay.UAsyncOperation)</signature>
                        <name>set_Progress</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(GamePlay.EStageStatus)</signature>
                        <name>set_State</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.IUI</name>
                <newname>a4</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>Close</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Downward</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void(GamePlay.Internal.IUIM, UnityEngine.GameObject)</signature>
                        <name>Loaded</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Open</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Unload</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Upward</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_CanDestroy</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>GamePlay.EUIExitMode()</signature>
                        <name>get_ExitMode</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_ExitTime</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.GameObject()</signature>
                        <name>get_Root</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>GamePlay.Internal.UUIWorker()</signature>
                        <name>get_Worker</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(GamePlay.Internal.UUIWorker)</signature>
                        <name>set_Worker</name>
                        <newname>f</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.IUIM</name>
                <newname>a3</newname>
                <methodlist>
                    <method>
                        <signature>UnityEngine.GameObject(string)</signature>
                        <name>FindLayer</name>
                    </method>
                    <method>
                        <signature>void(GamePlay.Internal.IUI, bool)</signature>
                        <name>OnCloseUI</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(GamePlay.Internal.IUI)</signature>
                        <name>OnDestroyUI</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.UAssetBundleAssetRequest</name>
                <newname>c</newname>
                <methodlist>
                    <method>
                        <signature>void(string, System.Type, System.Collections.Generic.List`1&lt;GamePlay.Internal.UAssetBundleCreateRequest&gt;, System.Action`1&lt;UnityEngine.Object&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>UnityEngine.AudioClip()</signature>
                        <name>GamePlay.IAssetRequest.get_audioClip</name>
                        <newname>z</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.GameObject()</signature>
                        <name>GamePlay.IAssetRequest.get_gameObject</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Sprite()</signature>
                        <name>GamePlay.IAssetRequest.get_sprite</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.TextAsset()</signature>
                        <name>GamePlay.IAssetRequest.get_textAsset</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Texture2D()</signature>
                        <name>GamePlay.IAssetRequest.get_texture2D</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>!!0()</signature>
                        <name>GetAsset</name>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator(string, System.Type, System.Collections.Generic.List`1&lt;GamePlay.Internal.UAssetBundleCreateRequest&gt;, System.Action`1&lt;UnityEngine.Object&gt;)</signature>
                        <name>Start</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Object()</signature>
                        <name>get_Asset</name>
                    </method>
                    <method>
                        <signature>GamePlay.IAssetRequest()</signature>
                        <name>get_AssetRequest</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_Progress</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GamePlay.UAsyncOperation</signature>
                        <name>Request</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Object</signature>
                        <name>Result</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>ValueProgress</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.UAssetBundleAssetRequest/&lt;Start&gt;d__4</name>
                <newname>c/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;System.Object&gt;.get_Current</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>GamePlay.Internal.UAssetBundleAssetRequest</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1/Enumerator&lt;GamePlay.Internal.UAssetBundleCreateRequest&gt;</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>&lt;rate&gt;5__2</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.AssetBundleRequest</signature>
                        <name>&lt;request&gt;5__4</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_assetName</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Action`1&lt;UnityEngine.Object&gt;</signature>
                        <name>_callback</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;GamePlay.Internal.UAssetBundleCreateRequest&gt;</signature>
                        <name>_list</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Type</signature>
                        <name>_type</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <name>GamePlay.Internal.UAssetBundleAssetRequest`1</name>
                <newname>d</newname>
                <methodlist>
                    <method>
                        <signature>void(string, System.Collections.Generic.List`1&lt;GamePlay.Internal.UAssetBundleCreateRequest&gt;, System.Action`1&lt;!0&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <name>GamePlay.Internal.UAssetBundleAssetRequest`1/&lt;&gt;c__DisplayClass0_0</name>
                <newname>d/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Object)</signature>
                        <name>&lt;.ctor&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Action`1&lt;!0&gt;</signature>
                        <name>_callback</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.UAssetBundleAsyncLoader</name>
                <newname>i</newname>
                <methodlist>
                    <method>
                        <signature>void(GamePlay.UAssetBundleManager, GamePlay.UAssetBundlePool, GamePlay.Internal.UAssetBundleManifestManager)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string, System.Collections.Generic.List`1&lt;GamePlay.Internal.UAssetBundleCreateRequest&gt;, System.Func`2&lt;string,UnityEngine.AssetBundleCreateRequest&gt;)</signature>
                        <name>LoadAssetBundle</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(string, string, System.Collections.Generic.List`1&lt;GamePlay.Internal.UAssetBundleCreateRequest&gt;, System.Func`2&lt;string,UnityEngine.AssetBundleCreateRequest&gt;)</signature>
                        <name>LoadAssetBundleInternal</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>GamePlay.UResourceRequest(System.Type, string, string, string, System.Action`1&lt;UnityEngine.Object&gt;)</signature>
                        <name>LoadAssetFromPathAsync</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>GamePlay.UResourceRequest(string, string, string, System.Action`1&lt;!!0&gt;)</signature>
                        <name>LoadAssetFromPathAsync</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>GamePlay.UResourceRequest(System.Type, string, string, string, System.Action`1&lt;UnityEngine.Object&gt;)</signature>
                        <name>LoadAssetFromResourceAsync</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>GamePlay.UResourceRequest(string, string, string, System.Action`1&lt;!!0&gt;)</signature>
                        <name>LoadAssetFromResourceAsync</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string, string, System.Collections.Generic.List`1&lt;GamePlay.Internal.UAssetBundleCreateRequest&gt;, System.Func`2&lt;string,UnityEngine.AssetBundleCreateRequest&gt;)</signature>
                        <name>LoadDependencies</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.AssetBundleCreateRequest(string)</signature>
                        <name>LoadFromFile</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.AssetBundleCreateRequest(string)</signature>
                        <name>LoadFromResource</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>GamePlay.UAsyncOperation(string, string, string, GamePlay.ELoadLevelMode, System.Action)</signature>
                        <name>LoadLevelFromPathAsync</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>GamePlay.UAsyncOperation(string, string, string, GamePlay.ELoadLevelMode, System.Action)</signature>
                        <name>LoadLevelFromResourceAsync</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.UAssetBundleAsyncLoader/&lt;&gt;c__DisplayClass10_0</name>
                <newname>i/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, UnityEngine.AssetBundle)</signature>
                        <name>&lt;LoadAssetBundleInternal&gt;b__0</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GamePlay.Internal.UAssetBundleAsyncLoader</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>fullPackgeName</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.UAssetBundleCreateRequest</name>
                <newname>e</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>UnityEngine.AssetBundle()</signature>
                        <name>get_AssetBundle</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.UAssetBundleCreateRequestDone</name>
                <newname>f</newname>
                <methodlist>
                    <method>
                        <signature>void(UnityEngine.AssetBundle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>UnityEngine.AssetBundle()</signature>
                        <name>get_AssetBundle</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>UnityEngine.AssetBundle</signature>
                        <name>Instance</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.UAssetBundleCreateRequestUnity</name>
                <newname>g</newname>
                <methodlist>
                    <method>
                        <signature>void(UnityEngine.AssetBundleCreateRequest, string, System.Action`2&lt;string,UnityEngine.AssetBundle&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator(string, System.Action`2&lt;string,UnityEngine.AssetBundle&gt;)</signature>
                        <name>Start</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.AssetBundle()</signature>
                        <name>get_AssetBundle</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_Progress</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float32</signature>
                        <name>LastProgress</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.AssetBundleCreateRequest</signature>
                        <name>Request</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.UAssetBundleCreateRequestUnity/&lt;Start&gt;d__5</name>
                <newname>g/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;System.Object&gt;.get_Current</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>GamePlay.Internal.UAssetBundleCreateRequestUnity</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Action`2&lt;string,UnityEngine.AssetBundle&gt;</signature>
                        <name>_completed</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_object</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.UAssetBundleLevelRequest</name>
                <newname>h</newname>
                <methodlist>
                    <method>
                        <signature>void(GamePlay.Internal.ULevelContainer, GamePlay.ULevel, System.Collections.Generic.List`1&lt;GamePlay.Internal.UAssetBundleCreateRequest&gt;, System.Action)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator(GamePlay.Internal.ULevelContainer, GamePlay.ULevel, System.Collections.Generic.List`1&lt;GamePlay.Internal.UAssetBundleCreateRequest&gt;, System.Action)</signature>
                        <name>Start</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_Progress</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float32</signature>
                        <name>AssetBundleProgress</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>LevelProgress</name>
                        <newname>i</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.UAssetBundleLevelRequest/&lt;Start&gt;d__5</name>
                <newname>h/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;System.Object&gt;.get_Current</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>GamePlay.Internal.UAssetBundleLevelRequest</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1/Enumerator&lt;GamePlay.Internal.UAssetBundleCreateRequest&gt;</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>&lt;rate&gt;5__2</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>GamePlay.Internal.UUnityLevelRequest</signature>
                        <name>&lt;request&gt;5__4</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>GamePlay.Internal.ULevelContainer</signature>
                        <name>_container</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Action</signature>
                        <name>_finished</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>GamePlay.ULevel</signature>
                        <name>_instance</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;GamePlay.Internal.UAssetBundleCreateRequest&gt;</signature>
                        <name>_lists</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.UAssetBundleLoaderFromPathAdapter</name>
                <newname>j</newname>
                <methodlist>
                    <method>
                        <signature>void(GamePlay.Internal.UAssetBundleAsyncLoader)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>!!0(string, string, string)</signature>
                        <name>GamePlay.IAssetBundleLoader.LoadAsset</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Object(System.Type, string, string, string)</signature>
                        <name>GamePlay.IAssetBundleLoader.LoadAsset</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>GamePlay.UResourceRequest(System.Type, string, string, string, System.Action`1&lt;UnityEngine.Object&gt;)</signature>
                        <name>GamePlay.IAssetBundleLoader.LoadAssetAsync</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>GamePlay.UResourceRequest(string, string, string, System.Action`1&lt;!!0&gt;)</signature>
                        <name>GamePlay.IAssetBundleLoader.LoadAssetAsync</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>GamePlay.UAsyncOperation(string, string, string, GamePlay.ELoadLevelMode, System.Action)</signature>
                        <name>GamePlay.IAssetBundleLoader.LoadLevel</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>GamePlay.UAsyncOperation(string, string, string, GamePlay.ELoadLevelMode, System.Action)</signature>
                        <name>GamePlay.IAssetBundleLoader.LoadLevelAsync</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string, string, bool)</signature>
                        <name>GamePlay.IAssetBundleLoader.UnloadAsset</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GamePlay.Internal.UAssetBundleAsyncLoader</signature>
                        <name>Loader</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.UAssetBundleLoaderFromResourceAdapter</name>
                <newname>k</newname>
                <methodlist>
                    <method>
                        <signature>void(GamePlay.Internal.UAssetBundleAsyncLoader)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>!!0(string, string, string)</signature>
                        <name>GamePlay.IAssetBundleLoader.LoadAsset</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Object(System.Type, string, string, string)</signature>
                        <name>GamePlay.IAssetBundleLoader.LoadAsset</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>GamePlay.UResourceRequest(System.Type, string, string, string, System.Action`1&lt;UnityEngine.Object&gt;)</signature>
                        <name>GamePlay.IAssetBundleLoader.LoadAssetAsync</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>GamePlay.UResourceRequest(string, string, string, System.Action`1&lt;!!0&gt;)</signature>
                        <name>GamePlay.IAssetBundleLoader.LoadAssetAsync</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>GamePlay.UAsyncOperation(string, string, string, GamePlay.ELoadLevelMode, System.Action)</signature>
                        <name>GamePlay.IAssetBundleLoader.LoadLevel</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>GamePlay.UAsyncOperation(string, string, string, GamePlay.ELoadLevelMode, System.Action)</signature>
                        <name>GamePlay.IAssetBundleLoader.LoadLevelAsync</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string, string, bool)</signature>
                        <name>GamePlay.IAssetBundleLoader.UnloadAsset</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GamePlay.Internal.UAssetBundleAsyncLoader</signature>
                        <name>Loader</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.UAssetBundleManifestManager</name>
                <newname>m</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>AddManifest</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Clear</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>Contains</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;(string, string)</signature>
                        <name>GetDependence</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>ParseModuleName</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>RemManifest</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,GamePlay.Internal.UModuleManifest&gt;</signature>
                        <name>Store</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.UAssetBundleSyncLoader</name>
                <newname>n</newname>
                <methodlist>
                    <method>
                        <signature>void(GamePlay.UAssetBundleManager, GamePlay.UAssetBundlePool, GamePlay.Internal.UAssetBundleManifestManager)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(string, string, string)</signature>
                        <name>GetAssetBundlePath</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.AssetBundle(string, string, System.Func`2&lt;string,string&gt;, System.Func`2&lt;string,UnityEngine.AssetBundle&gt;)</signature>
                        <name>LoadAssetBundle</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>!!0(string, string, string)</signature>
                        <name>LoadAssetFromPath</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Object(System.Type, string, string, string)</signature>
                        <name>LoadAssetFromPath</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>!!0(string, string, string)</signature>
                        <name>LoadAssetFromResource</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Object(System.Type, string, string, string)</signature>
                        <name>LoadAssetFromResource</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>GamePlay.UAsyncOperation(string, string, string, GamePlay.ELoadLevelMode, System.Action)</signature>
                        <name>LoadLevelFromPath</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>GamePlay.UAsyncOperation(string, string, string, GamePlay.ELoadLevelMode, System.Action)</signature>
                        <name>LoadLevelFromResource</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.AssetBundle(string)</signature>
                        <name>LoadPathPackage</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>LoadPathText</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.AssetBundle(string)</signature>
                        <name>LoadResourcePackage</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>LoadResourceText</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(GamePlay.ULevelManager)</signature>
                        <name>SetLevelManager</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>SetUseModuleFolder</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string, string, bool)</signature>
                        <name>Unload</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string, string, bool, int32)</signature>
                        <name>UnloadPackageByCount</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>IsUseModuleFolder</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>GamePlay.ULevelManager</signature>
                        <name>LevelManager</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>GamePlay.UAssetBundleManager</signature>
                        <name>Manager</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>GamePlay.Internal.UAssetBundleManifestManager</signature>
                        <name>ManifestManager</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,GamePlay.Internal.UAssetBundleSyncLoader/Note&gt;</signature>
                        <name>Notes</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>GamePlay.UAssetBundlePool</signature>
                        <name>PackageManager</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.UAssetBundleSyncLoader/Note</name>
                <newname>n/a</newname>
                <methodlist>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Dir</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_PackageName</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Dir</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_PackageName</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Dir&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;PackageName&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>Count</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.UCommandManager</name>
                <newname>ax</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(System.Type)</signature>
                        <name>CheckoutIsBaseType</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>Exc</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>GamePlay.Internal.ICommandContextExecuted(GamePlay.Internal.ICommandContext, string)</signature>
                        <name>Execute</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(GamePlay.Internal.ICommandContextExecuted)</signature>
                        <name>Execute</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(System.Reflection.MethodInfo)</signature>
                        <name>IsCommandMethod</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>object(System.Type, string)</signature>
                        <name>OnConvert</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Type)</signature>
                        <name>RegisterCmd</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(string, System.Collections.Generic.List`1&lt;GamePlay.Internal.ICommandContext&gt;&amp;)</signature>
                        <name>TryGetCommandContext</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string, string, GamePlay.Internal.ICommandContext&amp;)</signature>
                        <name>TryGetCommandContext</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Type)</signature>
                        <name>UnregisterCmd</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;System.Type&gt;</signature>
                        <name>BaseTypes</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,System.Collections.Generic.List`1&lt;GamePlay.Internal.ICommandContext&gt;&gt;</signature>
                        <name>Commands</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;System.Type&gt;</signature>
                        <name>CustomTypes</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Func`3&lt;System.Type,string,object&gt;</signature>
                        <name>OnCustomConvertCallback</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>char[]</signature>
                        <name>SPLIT_TAG_1</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.UFile</name>
                <newname>bd</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](unsigned int8[], string)</signature>
                        <name>AddKeystore</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(string, string)</signature>
                        <name>Combine</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;GamePlay.UFileVersionRemote&gt;(string, System.Collections.Generic.List`1&lt;GamePlay.UFileVersionRemote&gt;, string)</signature>
                        <name>CompareFileVersion</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(System.Security.Cryptography.MD5, string, int64&amp;)</signature>
                        <name>GetMD5</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetSafePath</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetSafeSearchPattern</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>unsigned int8[](unsigned int8[], string)</signature>
                        <name>RemKeystore</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.UFile/&lt;&gt;c__DisplayClass0_0</name>
                <newname>bd/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(GamePlay.Internal.UFileVersionLocal)</signature>
                        <name>&lt;CompareFileVersion&gt;b__0</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Predicate`1&lt;GamePlay.Internal.UFileVersionLocal&gt;</signature>
                        <name>&lt;&gt;9__0</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>GamePlay.UFileVersionRemote</signature>
                        <name>target</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.UFileVersionLocal</name>
                <newname>bc</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>MD5</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>RelativePath</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>Size</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.UGlobalRoot</name>
                <newname>bj</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.UInternalExtends</name>
                <newname>bi</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(object, string)</signature>
                        <name>Error</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, string, object[])</signature>
                        <name>Error</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>GamePlay.Internal.UGlobalRoot()</signature>
                        <name>GetRoot</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, string)</signature>
                        <name>Log</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object, string, object[])</signature>
                        <name>Log</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Collections.IEnumerator)</signature>
                        <name>StartCoroutine</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>StopAllCoroutine</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Collections.IEnumerator)</signature>
                        <name>StopCoroutine</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, string)</signature>
                        <name>Warning</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, string, object[])</signature>
                        <name>Warning</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GamePlay.Internal.UGlobalRoot</signature>
                        <name>Instance</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>IsEnableLog</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.ULevelContainer</name>
                <newname>az</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(GamePlay.ULevel)</signature>
                        <name>AdditiveMainLevel</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(GamePlay.ULevel, UnityEngine.SceneManagement.Scene)</signature>
                        <name>BindInstance</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(GamePlay.ULevel, GamePlay.Internal.UUnityLevelRequest)</signature>
                        <name>BindRequest</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>GamePlay.ULevel(string, GamePlay.ELoadLevelMode)</signature>
                        <name>CreateInstance</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;GamePlay.ULevel&gt;)</signature>
                        <name>Dispose</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHandle</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>GamePlay.ULevel()</signature>
                        <name>GetMainLevel</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(GamePlay.ULevel)</signature>
                        <name>IsWorking</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(GamePlay.ULevel)</signature>
                        <name>MergeToMainLevel</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>bool(GamePlay.ULevel)</signature>
                        <name>NoInactiveRequest</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(GamePlay.ULevel)</signature>
                        <name>ReplaceMainLevel</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(GamePlay.ULevel)</signature>
                        <name>SetSingleMainLevel</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(GamePlay.ULevel)</signature>
                        <name>SetSingleSubLevel</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>bool(GamePlay.ULevel, int32, GamePlay.ELoadLevelMode, GamePlay.ULevel&amp;)</signature>
                        <name>TryGetRequestByLoadMode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(GamePlay.ULevel)</signature>
                        <name>UnbindRequest</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>UnloadByName</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.SceneManagement.Scene)</signature>
                        <name>UnloadLevel</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(GamePlay.ULevel, UnityEngine.SceneManagement.Scene)</signature>
                        <name>UselessLevel</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>Handle</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>USELESS_NAME</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;GamePlay.ULevel&gt;</signature>
                        <name>Useless</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;GamePlay.ULevel&gt;</signature>
                        <name>Wokers</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.ULevelContainer/&lt;&gt;c__DisplayClass18_0</name>
                <newname>az/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(GamePlay.ULevel)</signature>
                        <name>&lt;NoInactiveRequest&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GamePlay.ULevel</signature>
                        <name>_instance</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.ULevelContainer/&lt;&gt;c__DisplayClass19_0</name>
                <newname>az/c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(GamePlay.ULevel)</signature>
                        <name>&lt;TryGetRequestByLoadMode&gt;b__0</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GamePlay.ULevel</signature>
                        <name>_instance</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>GamePlay.ELoadLevelMode</signature>
                        <name>_loadMode</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.ULevelContainer/&lt;&gt;c__DisplayClass7_0</name>
                <newname>az/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(GamePlay.ULevel)</signature>
                        <name>&lt;UnloadByName&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>_levelName</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.UModuleManifest</name>
                <newname>l</newname>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;(string)</signature>
                        <name>GetDependence</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,System.Collections.Generic.List`1&lt;string&gt;&gt;</signature>
                        <name>Dependencies</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.URemoteVersionLoader</name>
                <newname>bg</newname>
                <methodlist>
                    <method>
                        <signature>void(string, System.Func`2&lt;unsigned int8[],unsigned int8[]&gt;, System.Action`1&lt;bool&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(GamePlay.UAsyncOperation, System.Func`2&lt;unsigned int8[],unsigned int8[]&gt;)</signature>
                        <name>GetContent</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator(GamePlay.UAsyncOperation, System.Func`2&lt;unsigned int8[],unsigned int8[]&gt;, System.Action`1&lt;bool&gt;)</signature>
                        <name>Start</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_Progress</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GamePlay.UAsyncOperation</signature>
                        <name>Request</name>
                        <newname>p</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.URemoteVersionLoader/&lt;Start&gt;d__5</name>
                <newname>bg/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;System.Object&gt;.get_Current</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>GamePlay.Internal.URemoteVersionLoader</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Action`1&lt;bool&gt;</signature>
                        <name>_finished</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>GamePlay.UAsyncOperation</signature>
                        <name>_operation</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;unsigned int8[],unsigned int8[]&gt;</signature>
                        <name>_unpackKeystore</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.UResourceLoader</name>
                <newname>o</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(GamePlay.ULevelManager)</signature>
                        <name>Init</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>!!0(string)</signature>
                        <name>LoadAsset</name>
                    </method>
                    <method>
                        <signature>UnityEngine.Object(System.Type, string)</signature>
                        <name>LoadAsset</name>
                    </method>
                    <method>
                        <signature>GamePlay.UResourceRequest(System.Type, string, System.Action`1&lt;UnityEngine.Object&gt;)</signature>
                        <name>LoadAssetAsync</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>GamePlay.UResourceRequest(string, System.Action`1&lt;!!0&gt;)</signature>
                        <name>LoadAssetAsync</name>
                    </method>
                    <method>
                        <signature>GamePlay.UAsyncOperation(string, GamePlay.ELoadLevelMode, System.Action)</signature>
                        <name>LoadLevel</name>
                    </method>
                    <method>
                        <signature>GamePlay.UAsyncOperation(string, GamePlay.ELoadLevelMode, System.Action)</signature>
                        <name>LoadLevelAsync</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>UnloadAsset</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GamePlay.ULevelManager</signature>
                        <name>LevelManager</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.UResourceRequestUnity</name>
                <newname>p</newname>
                <methodlist>
                    <method>
                        <signature>void(string, System.Type, System.Action`1&lt;UnityEngine.Object&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>UnityEngine.AudioClip()</signature>
                        <name>GamePlay.IAssetRequest.get_audioClip</name>
                        <newname>z</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.GameObject()</signature>
                        <name>GamePlay.IAssetRequest.get_gameObject</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Sprite()</signature>
                        <name>GamePlay.IAssetRequest.get_sprite</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.TextAsset()</signature>
                        <name>GamePlay.IAssetRequest.get_textAsset</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.Texture2D()</signature>
                        <name>GamePlay.IAssetRequest.get_texture2D</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>!!0()</signature>
                        <name>GetAsset</name>
                    </method>
                    <method>
                        <signature>UnityEngine.Object()</signature>
                        <name>get_Asset</name>
                    </method>
                    <method>
                        <signature>GamePlay.IAssetRequest()</signature>
                        <name>get_AssetRequest</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_Progress</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>UnityEngine.ResourceRequest</signature>
                        <name>Request</name>
                        <newname>i</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.UResourceRequestUnity/&lt;&gt;c__DisplayClass1_0</name>
                <newname>p/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(UnityEngine.AsyncOperation)</signature>
                        <name>&lt;.ctor&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Action`1&lt;UnityEngine.Object&gt;</signature>
                        <name>_finish</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <name>GamePlay.Internal.UResourceRequestUnity`1</name>
                <newname>q</newname>
                <methodlist>
                    <method>
                        <signature>void(string, System.Action`1&lt;!0&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <name>GamePlay.Internal.UResourceRequestUnity`1/&lt;&gt;c__DisplayClass0_0</name>
                <newname>q/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Object)</signature>
                        <name>&lt;.ctor&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Action`1&lt;!0&gt;</signature>
                        <name>_finish</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.UStageRequest</name>
                <newname>a2</newname>
                <methodlist>
                    <method>
                        <signature>void(GamePlay.Internal.IStage, System.Action`1&lt;GamePlay.Internal.IStage&gt;, System.Action`1&lt;GamePlay.UStage&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator(GamePlay.Internal.IStage, System.Action`1&lt;GamePlay.Internal.IStage&gt;)</signature>
                        <name>Start</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>void(System.Action`1&lt;GamePlay.UStage&gt;)</signature>
                        <name>add_Completed</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_Progress</name>
                    </method>
                    <method>
                        <signature>void(System.Action`1&lt;GamePlay.UStage&gt;)</signature>
                        <name>remove_Completed</name>
                        <newname>w</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Action`1&lt;GamePlay.UStage&gt;</signature>
                        <name>Completed</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>GamePlay.UAsyncOperation</signature>
                        <name>Request</name>
                        <newname>m</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.UStageRequest/&lt;Start&gt;d__5</name>
                <newname>a2/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;System.Object&gt;.get_Current</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>GamePlay.Internal.UStageRequest</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Action`1&lt;GamePlay.Internal.IStage&gt;</signature>
                        <name>_finished</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>GamePlay.Internal.IStage</signature>
                        <name>_stage</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.UStartupManager</name>
                <newname>ay</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitStartup</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(GamePlay.UGameManager)</signature>
                        <name>Initialized</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>LoadOptions</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.GameObject)</signature>
                        <name>RegisterOptionByChildren</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.GameObject)</signature>
                        <name>RegisterOptionObject</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Type)</signature>
                        <name>RegisterOptionTypes</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UnloadOptions</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Type</signature>
                        <name>InterfaceType</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Type</signature>
                        <name>MonoComponent</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;GamePlay.IStartupOperation&gt;</signature>
                        <name>Opeartions</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;UnityEngine.GameObject&gt;</signature>
                        <name>OptionOwners</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;System.Type&gt;</signature>
                        <name>OptionTypes</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>GamePlay.UGameManager</signature>
                        <name>Parent</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.UStartupManager/&lt;&gt;c</name>
                <newname>ay/&lt;&gt;c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(GamePlay.IStartupOperation, GamePlay.IStartupOperation)</signature>
                        <name>&lt;InitStartup&gt;b__11_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GamePlay.Internal.UStartupManager/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                    </field>
                    <field>
                        <signature>System.Comparison`1&lt;GamePlay.IStartupOperation&gt;</signature>
                        <name>&lt;&gt;9__11_0</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.UStartupManager/&lt;LoadOptions&gt;d__12</name>
                <newname>ay/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;System.Object&gt;.get_Current</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>GamePlay.Internal.UStartupManager</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;i&gt;5__2</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.UUIDisposeRequest</name>
                <newname>a5</newname>
                <methodlist>
                    <method>
                        <signature>void(GamePlay.Internal.UUIWorker[], System.Action`1&lt;GamePlay.UUIInfo&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator(GamePlay.Internal.UUIWorker, System.Action`1&lt;GamePlay.UUIInfo&gt;)</signature>
                        <name>Start</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.UUIDisposeRequest/&lt;&gt;c__DisplayClass1_0</name>
                <newname>a5/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>&lt;Start&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GamePlay.Internal.UUIWorker</signature>
                        <name>_worker</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.UUIDisposeRequest/&lt;Start&gt;d__1</name>
                <newname>a5/b</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;System.Object&gt;.get_Current</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>GamePlay.Internal.UUIDisposeRequest/&lt;&gt;c__DisplayClass1_0</signature>
                        <name>&lt;&gt;8__1</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Action`1&lt;GamePlay.UUIInfo&gt;</signature>
                        <name>_unloadCallback</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>GamePlay.Internal.UUIWorker</signature>
                        <name>_worker</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.UUIRequestBy</name>
                <newname>a6</newname>
                <methodlist>
                    <method>
                        <signature>void(GamePlay.UResourceRequest, GamePlay.Internal.UUIWorker, System.Action`2&lt;GamePlay.Internal.UUIWorker,UnityEngine.GameObject&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator(GamePlay.Internal.UUIWorker, System.Action`2&lt;GamePlay.Internal.UUIWorker,UnityEngine.GameObject&gt;)</signature>
                        <name>Start</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_Progress</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float32</signature>
                        <name>LastProgress</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>GamePlay.UResourceRequest</signature>
                        <name>Request</name>
                        <newname>o</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.UUIRequestBy/&lt;Start&gt;d__3</name>
                <newname>a6/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;System.Object&gt;.get_Current</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>GamePlay.Internal.UUIRequestBy</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Action`2&lt;GamePlay.Internal.UUIWorker,UnityEngine.GameObject&gt;</signature>
                        <name>_callback</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>GamePlay.Internal.UUIWorker</signature>
                        <name>_worker</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.UUIRequestByDone</name>
                <newname>a7</newname>
                <methodlist>
                    <method>
                        <signature>void(UnityEngine.GameObject)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.UUIWorker</name>
                <newname>a9</newname>
                <methodlist>
                    <method>
                        <signature>void(GamePlay.Internal.EWorkerState, GamePlay.Internal.EWorkerState, GamePlay.UUIInfo, bool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>SetClose</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetDownward</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>bool(GamePlay.Internal.IUIM, UnityEngine.GameObject)</signature>
                        <name>SetLoaded</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetOpen</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetRest</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetUnload</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetUpward</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void(GamePlay.Internal.EWorkerState)</signature>
                        <name>SyncState</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsSceneObject</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_NextExitState</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>GamePlay.Internal.EWorkerState()</signature>
                        <name>get_NextState</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>GamePlay.Internal.EWorkerState()</signature>
                        <name>get_State</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsSceneObject</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_NextExitState</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(GamePlay.Internal.EWorkerState)</signature>
                        <name>set_NextState</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(GamePlay.Internal.EWorkerState)</signature>
                        <name>set_State</name>
                        <newname>j</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsSceneObject&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;NextExitState&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>GamePlay.Internal.EWorkerState</signature>
                        <name>&lt;NextState&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>GamePlay.Internal.EWorkerState</signature>
                        <name>&lt;State&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>ExitTime</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>GamePlay.UUIInfo</signature>
                        <name>Info</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>GamePlay.UUIRequest</signature>
                        <name>Request</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>GamePlay.Internal.IUI</signature>
                        <name>Script</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.UUnityLevelRequest</name>
                <newname>a0</newname>
                <methodlist>
                    <method>
                        <signature>void(GamePlay.Internal.ULevelContainer, GamePlay.ULevel, System.Action)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator(GamePlay.Internal.ULevelContainer, GamePlay.ULevel)</signature>
                        <name>CheckoutRequest</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator(GamePlay.Internal.ULevelContainer, GamePlay.ULevel, System.Action)</signature>
                        <name>Start</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_Progress</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float32</signature>
                        <name>LevelProgress</name>
                        <newname>l</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.UUnityLevelRequest/&lt;CheckoutRequest&gt;d__5</name>
                <newname>a0/b</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;System.Object&gt;.get_Current</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>GamePlay.Internal.ULevelContainer</signature>
                        <name>_container</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>GamePlay.ULevel</signature>
                        <name>_instance</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.UUnityLevelRequest/&lt;Start&gt;d__4</name>
                <newname>a0/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;System.Object&gt;.get_Current</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>GamePlay.Internal.UUnityLevelRequest</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.AsyncOperation</signature>
                        <name>&lt;request&gt;5__2</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.SceneManagement.Scene</signature>
                        <name>&lt;scene&gt;5__3</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>GamePlay.Internal.ULevelContainer</signature>
                        <name>_container</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Action</signature>
                        <name>_finished</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>GamePlay.ULevel</signature>
                        <name>_instance</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.ValueField</name>
                <newname>af</newname>
                <methodlist>
                    <method>
                        <signature>void(GamePlay.Internal.DBPropertyConvertInfo, System.Reflection.FieldInfo)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetName</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>object(object)</signature>
                        <name>ReadValue</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(object, object)</signature>
                        <name>WriteValue</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Reflection.FieldInfo</signature>
                        <name>Info</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.ValueProperty</name>
                <newname>ag</newname>
                <methodlist>
                    <method>
                        <signature>void(GamePlay.Internal.DBPropertyConvertInfo, System.Reflection.PropertyInfo)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetName</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>object(object)</signature>
                        <name>ReadValue</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(object, object)</signature>
                        <name>WriteValue</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Reflection.PropertyInfo</signature>
                        <name>Info</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.Internal.VersionCheckerWithRemote</name>
                <newname>bf</newname>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, System.Collections.Generic.List`1&lt;GamePlay.UFileVersionRemote&gt;)</signature>
                        <name>Checker</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetFileCounter</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>int32(System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>GetFileCounter</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;GamePlay.UFileVersionRemote&gt;()</signature>
                        <name>GetFileInfo</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;GamePlay.UFileVersionRemote&gt;(System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>GetFileInfo</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;GamePlay.UFileVersionRemote&gt;(string)</signature>
                        <name>GetFileInfo</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;()</signature>
                        <name>GetKeys</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Remove</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>Remove</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>Remove</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(GamePlay.UFileVersionRemote)</signature>
                        <name>SmartAdd</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>CheckWorkPath</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,System.Collections.Generic.List`1&lt;GamePlay.UFileVersionRemote&gt;&gt;</signature>
                        <name>DownloadInfomation</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.UAssetBundleLoaderProxy</name>
                <methodlist>
                    <method>
                        <signature>void(string, GamePlay.IAssetBundleLoader)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Clear</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>!!0(string, string)</signature>
                        <name>GamePlay.Internal.IAssetBundleLoaderProxy.LoadAsset</name>
                    </method>
                    <method>
                        <signature>UnityEngine.Object(System.Type, string, string)</signature>
                        <name>GamePlay.Internal.IAssetBundleLoaderProxy.LoadAsset</name>
                    </method>
                    <method>
                        <signature>GamePlay.UResourceRequest(System.Type, string, string, System.Action`1&lt;UnityEngine.Object&gt;)</signature>
                        <name>GamePlay.Internal.IAssetBundleLoaderProxy.LoadAssetAsync</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>GamePlay.UResourceRequest(string, string, System.Action`1&lt;!!0&gt;)</signature>
                        <name>GamePlay.Internal.IAssetBundleLoaderProxy.LoadAssetAsync</name>
                    </method>
                    <method>
                        <signature>GamePlay.UAsyncOperation(string, string, GamePlay.ELoadLevelMode, System.Action)</signature>
                        <name>GamePlay.Internal.IAssetBundleLoaderProxy.LoadLevel</name>
                    </method>
                    <method>
                        <signature>GamePlay.UAsyncOperation(string, string, GamePlay.ELoadLevelMode, System.Action)</signature>
                        <name>GamePlay.Internal.IAssetBundleLoaderProxy.LoadLevelAsync</name>
                    </method>
                    <method>
                        <signature>void(string, bool)</signature>
                        <name>GamePlay.Internal.IAssetBundleLoaderProxy.UnloadAsset</name>
                    </method>
                    <method>
                        <signature>GamePlay.UAssetLoader(string)</signature>
                        <name>GetLoader</name>
                    </method>
                    <method>
                        <signature>GamePlay.UAssetLoader(string)</signature>
                        <name>get_Item</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GamePlay.IAssetBundleLoader</signature>
                        <name>Interface</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,GamePlay.UAssetLoader&gt;</signature>
                        <name>Loaders</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Path</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>GamePlay.UAssetLoader(string)</signature>
                        <name>Item</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GamePlay.UAssetBundleLoaderProxy/UAssetBundleLoaderImp</name>
                <newname>GamePlay.UAssetBundleLoaderProxy/a</newname>
                <methodlist>
                    <method>
                        <signature>void(GamePlay.Internal.IAssetBundleLoaderProxy, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>!!0(string)</signature>
                        <name>LoadAsset</name>
                    </method>
                    <method>
                        <signature>UnityEngine.Object(System.Type, string)</signature>
                        <name>LoadAsset</name>
                    </method>
                    <method>
                        <signature>GamePlay.UResourceRequest(System.Type, string, System.Action`1&lt;UnityEngine.Object&gt;)</signature>
                        <name>LoadAssetAsync</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>GamePlay.UResourceRequest(string, System.Action`1&lt;!!0&gt;)</signature>
                        <name>LoadAssetAsync</name>
                    </method>
                    <method>
                        <signature>GamePlay.UAsyncOperation(string, GamePlay.ELoadLevelMode, System.Action)</signature>
                        <name>LoadLevel</name>
                    </method>
                    <method>
                        <signature>GamePlay.UAsyncOperation(string, GamePlay.ELoadLevelMode, System.Action)</signature>
                        <name>LoadLevelAsync</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>UnloadAsset</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>PackageName</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>GamePlay.Internal.IAssetBundleLoaderProxy</signature>
                        <name>Proxy</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.UAssetBundleLoaderProxyManager</name>
                <methodlist>
                    <method>
                        <signature>void(GamePlay.IAssetBundleLoader)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Clear</name>
                    </method>
                    <method>
                        <signature>void(string, string, bool)</signature>
                        <name>CreateLoaderProxy</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>DeleteLoaderProxy</name>
                    </method>
                    <method>
                        <signature>GamePlay.UAssetBundleLoaderProxy()</signature>
                        <name>GetDefaultProxy</name>
                    </method>
                    <method>
                        <signature>GamePlay.UAssetBundleLoaderProxy(string)</signature>
                        <name>GetProxy</name>
                    </method>
                    <method>
                        <signature>void(GamePlay.IAssetBundleLoader)</signature>
                        <name>SetCustomLoader</name>
                    </method>
                    <method>
                        <signature>GamePlay.IAssetBundleLoader()</signature>
                        <name>get_FinalLoader</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>GamePlay.UAssetBundleLoaderProxy(string)</signature>
                        <name>get_Item</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GamePlay.IAssetBundleLoader</signature>
                        <name>CustomLoader</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>GamePlay.UAssetBundleLoaderProxy</signature>
                        <name>DefaultProxy</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>GamePlay.IAssetBundleLoader</signature>
                        <name>InternalLoader</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,GamePlay.UAssetBundleLoaderProxy&gt;</signature>
                        <name>Proxies</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>GamePlay.IAssetBundleLoader()</signature>
                        <name>FinalLoader</name>
                    </property>
                    <property>
                        <signature>GamePlay.UAssetBundleLoaderProxy(string)</signature>
                        <name>Item</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GamePlay.UAssetBundleManager</name>
                <methodlist>
                    <method>
                        <signature>void(GamePlay.UAssetBundlePool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, GamePlay.UAssetBundleLoaderProxyManager)</signature>
                        <name>AddProxyManager</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>GamePlay.UAssetBundleLoaderProxyManager(string)</signature>
                        <name>GetProxyManager</name>
                    </method>
                    <method>
                        <signature>void(GamePlay.ULevelManager, string)</signature>
                        <name>Initialized</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>RemProxyManager</name>
                    </method>
                    <method>
                        <signature>GamePlay.UAssetBundleLoaderProxyManager(string)</signature>
                        <name>get_Item</name>
                    </method>
                    <method>
                        <signature>GamePlay.UAssetBundleLoaderProxyManager()</signature>
                        <name>get_PathLoader</name>
                    </method>
                    <method>
                        <signature>GamePlay.UAssetBundleLoaderProxyManager()</signature>
                        <name>get_ResLoader</name>
                    </method>
                    <method>
                        <signature>void(GamePlay.UAssetBundleLoaderProxyManager)</signature>
                        <name>set_PathLoader</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(GamePlay.UAssetBundleLoaderProxyManager)</signature>
                        <name>set_ResLoader</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GamePlay.UAssetBundleLoaderProxyManager</signature>
                        <name>&lt;PathLoader&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>GamePlay.UAssetBundleLoaderProxyManager</signature>
                        <name>&lt;ResLoader&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>GamePlay.Internal.UAssetBundleAsyncLoader</signature>
                        <name>AsyncLoader</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>GamePlay.Internal.UAssetBundleManifestManager</signature>
                        <name>ManifestManager</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>NAME_PATH</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>NAME_RES</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>PackageExtension</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>GamePlay.UAssetBundlePool</signature>
                        <name>Pool</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,GamePlay.UAssetBundleLoaderProxyManager&gt;</signature>
                        <name>ProxyManagers</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>GamePlay.UAssetBundleLoaderProxyManager(string)</signature>
                        <name>Item</name>
                    </property>
                    <property>
                        <signature>GamePlay.UAssetBundleLoaderProxyManager()</signature>
                        <name>PathLoader</name>
                    </property>
                    <property>
                        <signature>GamePlay.UAssetBundleLoaderProxyManager()</signature>
                        <name>ResLoader</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GamePlay.UAssetBundlePool</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, UnityEngine.AssetBundle)</signature>
                        <name>AddPackage</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string, GamePlay.Internal.UAssetBundleCreateRequest)</signature>
                        <name>AddRequest</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.AssetBundle(string)</signature>
                        <name>ApplyPackage</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string, UnityEngine.AssetBundle)</signature>
                        <name>CompleteRequest</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>GamePlay.UAssetBundleManager()</signature>
                        <name>CreateManager</name>
                    </method>
                    <method>
                        <signature>GamePlay.UAssetBundlePool()</signature>
                        <name>GetInstance</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string, int32, bool)</signature>
                        <name>RemPackage</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string, GamePlay.Internal.UAssetBundleCreateRequest&amp;)</signature>
                        <name>TryGetRequest</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GamePlay.UAssetBundlePool</signature>
                        <name>Instance</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,GamePlay.UAssetBundlePool/UAssetBundleInstance&gt;</signature>
                        <name>Pool</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,GamePlay.Internal.UAssetBundleCreateRequest&gt;</signature>
                        <name>WokerRequest</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.UAssetBundlePool/UAssetBundleInstance</name>
                <newname>GamePlay.UAssetBundlePool/a</newname>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Path</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Path</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Path&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.AssetBundle</signature>
                        <name>Instance</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ReferenceCount</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.UAssetLoader</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>GamePlay.UAsyncOperation(string, GamePlay.ELoadLevelMode, System.Action)</signature>
                        <name>GamePlay.ILevelLoader.LoadLevel</name>
                    </method>
                    <method>
                        <signature>GamePlay.UAsyncOperation(string, GamePlay.ELoadLevelMode, System.Action)</signature>
                        <name>GamePlay.ILevelLoader.LoadLevelAsync</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>GamePlay.ILevelLoader.UnloadAsset</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>!!0(string)</signature>
                        <name>LoadAsset</name>
                    </method>
                    <method>
                        <signature>UnityEngine.Object(System.Type, string)</signature>
                        <name>LoadAsset</name>
                    </method>
                    <method>
                        <signature>GamePlay.UResourceRequest(System.Type, string, System.Action`1&lt;UnityEngine.Object&gt;)</signature>
                        <name>LoadAssetAsync</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>GamePlay.UResourceRequest(string, System.Action`1&lt;!!0&gt;)</signature>
                        <name>LoadAssetAsync</name>
                    </method>
                    <method>
                        <signature>GamePlay.UAsyncOperation(string, GamePlay.ELoadLevelMode, System.Action)</signature>
                        <name>LoadLevel</name>
                    </method>
                    <method>
                        <signature>GamePlay.UAsyncOperation(string, GamePlay.ELoadLevelMode, System.Action)</signature>
                        <name>LoadLevelAsync</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>UnloadAsset</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.UAssetManager</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, UnityEngine.Object)</signature>
                        <name>AddObject</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(GamePlay.ULevelManager)</signature>
                        <name>Initialized</name>
                    </method>
                    <method>
                        <signature>bool(string, UnityEngine.Object&amp;)</signature>
                        <name>TryGetObject</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,UnityEngine.Object&gt;</signature>
                        <name>Container</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>GamePlay.UAssetLoader</signature>
                        <name>Loader</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.UAsyncOperation</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>System.Collections.IEnumerator.MoveNext</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsDone</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_Progress</name>
                    </method>
                    <method>
                        <signature>void(float32)</signature>
                        <name>set_Progress</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float32</signature>
                        <name>&lt;Progress&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>IsDone</name>
                    </property>
                    <property>
                        <signature>float32()</signature>
                        <name>Progress</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.Current</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GamePlay.UAsyncOperationDone</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_Progress</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>float32()</signature>
                        <name>Progress</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GamePlay.UAsyncOperationFuncBool</name>
                <methodlist>
                    <method>
                        <signature>void(System.Func`1&lt;bool&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsDone</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`1&lt;bool&gt;</signature>
                        <name>Callback</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>IsDone</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GamePlay.UAsyncOperationFuncFloat</name>
                <methodlist>
                    <method>
                        <signature>void(System.Func`1&lt;float32&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_Progress</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`1&lt;float32&gt;</signature>
                        <name>Callback</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>float32()</signature>
                        <name>Progress</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GamePlay.UAsyncOperationGroup</name>
                <methodlist>
                    <method>
                        <signature>void(GamePlay.UAsyncOperation[], System.Action)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator(System.Collections.Generic.List`1&lt;GamePlay.UAsyncOperation&gt;, float32, System.Action)</signature>
                        <name>Start</name>
                        <newname>v</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.UAsyncOperationGroup/&lt;Start&gt;d__1</name>
                <newname>GamePlay.UAsyncOperationGroup/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;System.Object&gt;.get_Current</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>GamePlay.UAsyncOperationGroup</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1/Enumerator&lt;GamePlay.UAsyncOperation&gt;</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Action</signature>
                        <name>_finish</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;GamePlay.UAsyncOperation&gt;</signature>
                        <name>_operations</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>_rate</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.UAsyncOperationUnity</name>
                <methodlist>
                    <method>
                        <signature>void(UnityEngine.AsyncOperation)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_Progress</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>UnityEngine.AsyncOperation</signature>
                        <name>UnityOperation</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>float32()</signature>
                        <name>Progress</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GamePlay.UConfig</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Clear</name>
                    </method>
                    <method>
                        <signature>bool(string&amp;, string)</signature>
                        <name>CreateContent</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>!!0(string)</signature>
                        <name>Get</name>
                    </method>
                    <method>
                        <signature>void(System.Type[])</signature>
                        <name>Initialized</name>
                    </method>
                    <method>
                        <signature>bool(string, string)</signature>
                        <name>LoadData</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>bool(!!0&amp;, string)</signature>
                        <name>TryGet</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>UnloadData</name>
                    </method>
                    <method>
                        <signature>GamePlay.ILog()</signature>
                        <name>get_Output</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(GamePlay.ILog)</signature>
                        <name>set_Output</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GamePlay.ILog</signature>
                        <name>&lt;Output&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>GamePlay.ILog()</signature>
                        <name>Output</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GamePlay.UConfigStorage</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Clear</name>
                    </method>
                    <method>
                        <signature>bool(string&amp;, string)</signature>
                        <name>CreateContent</name>
                    </method>
                    <method>
                        <signature>GamePlay.DBContent(string, string)</signature>
                        <name>Get</name>
                    </method>
                    <method>
                        <signature>string(GamePlay.Internal.DBContentDynamic)</signature>
                        <name>GetObjectContent</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>GamePlay.DBValue(string, string, string)</signature>
                        <name>GetValue</name>
                    </method>
                    <method>
                        <signature>void(System.Type[])</signature>
                        <name>InitializedCustomEnum</name>
                    </method>
                    <method>
                        <signature>bool(string, string)</signature>
                        <name>LoadData</name>
                    </method>
                    <method>
                        <signature>bool(string, GamePlay.DBContent&amp;, string)</signature>
                        <name>TryGet</name>
                    </method>
                    <method>
                        <signature>bool(string, string, GamePlay.DBValue&amp;, string)</signature>
                        <name>TryGetValue</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>UnloadData</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GamePlay.Internal.IDBPropertyConvertForStorage</signature>
                        <name>ConvertBase</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,System.Collections.Generic.List`1&lt;GamePlay.Internal.DBContentDynamic&gt;&gt;</signature>
                        <name>Datas</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.UConfigStorage/&lt;&gt;c__DisplayClass4_0</name>
                <newname>GamePlay.UConfigStorage/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(GamePlay.Internal.DBContentDynamic)</signature>
                        <name>&lt;LoadData&gt;b__0</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Predicate`1&lt;GamePlay.Internal.DBContentDynamic&gt;</signature>
                        <name>&lt;&gt;9__0</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>temp</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.UConfigStorage/&lt;&gt;c__DisplayClass6_0</name>
                <newname>GamePlay.UConfigStorage/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(GamePlay.Internal.DBContentDynamic)</signature>
                        <name>&lt;Get&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>_mainClass</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.UDB</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(System.Reflection.FieldInfo, System.Type)</signature>
                        <name>CheckoutValidStorage</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Clear</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>ClearCacheData</name>
                    </method>
                    <method>
                        <signature>void(System.Type)</signature>
                        <name>ClearData</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(System.Type, string&amp;)</signature>
                        <name>CreateContent</name>
                    </method>
                    <method>
                        <signature>System.Reflection.FieldInfo(System.Type)</signature>
                        <name>GetStorageField</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;GamePlay.UDBPropertyTitleDB&gt;(string)</signature>
                        <name>GetTitle</name>
                    </method>
                    <method>
                        <signature>bool(System.Type, string)</signature>
                        <name>LoadData</name>
                    </method>
                    <method>
                        <signature>bool(string&amp;, System.Type, object[])</signature>
                        <name>MakeTableContent</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(System.Collections.Generic.List`1&lt;GamePlay.Internal.DBProperty&gt;&amp;, System.Type)</signature>
                        <name>MakeValidPropertys</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>!!0[](string, bool)</signature>
                        <name>Select</name>
                    </method>
                    <method>
                        <signature>object[](string, string, bool)</signature>
                        <name>Select</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>bool(string, !!0[]&amp;, bool)</signature>
                        <name>TrySelect</name>
                    </method>
                    <method>
                        <signature>bool(string, string, object[]&amp;, bool)</signature>
                        <name>TrySelect</name>
                    </method>
                    <method>
                        <signature>void(System.Type)</signature>
                        <name>UnloadData</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GamePlay.Internal.IDBPropertyConvertForDB</signature>
                        <name>ConvertBase</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,GamePlay.UDB/Data&gt;</signature>
                        <name>Datas</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.UDB/Data</name>
                <newname>GamePlay.UDB/a</newname>
                <methodlist>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;GamePlay.Internal.IProperty&gt;, object, System.Type)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string, object&amp;, bool)</signature>
                        <name>CheckoutCache</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Clear</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ClearCacheData</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(string, object, bool)</signature>
                        <name>SaveToCache</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_DataArray</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Type()</signature>
                        <name>get_MainType</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;GamePlay.Internal.IProperty&gt;()</signature>
                        <name>get_Propertys</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_DataArray</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Type)</signature>
                        <name>set_MainType</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;GamePlay.Internal.IProperty&gt;)</signature>
                        <name>set_Propertys</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>&lt;DataArray&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Type</signature>
                        <name>&lt;MainType&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;GamePlay.Internal.IProperty&gt;</signature>
                        <name>&lt;Propertys&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>GamePlay.Internal.DataCache</signature>
                        <name>Cache</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.UDBPropertyTitle</name>
                <methodlist>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>Name</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TypeName</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.UDBPropertyTitleDB</name>
                <methodlist>
                    <method>
                        <signature>void(string, string, System.Func`2&lt;object,object&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(object)</signature>
                        <name>GetStringValue</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`2&lt;object,object&gt;</signature>
                        <name>OnGetValue</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.UDBStorage</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Clear</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>ClearCacheData</name>
                    </method>
                    <method>
                        <signature>bool(string, string&amp;)</signature>
                        <name>CreateContent</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;GamePlay.UDBPropertyTitle&gt;(string)</signature>
                        <name>GetTitle</name>
                    </method>
                    <method>
                        <signature>void(System.Type[])</signature>
                        <name>InitializedCustomEnum</name>
                    </method>
                    <method>
                        <signature>bool(string, string)</signature>
                        <name>LoadData</name>
                    </method>
                    <method>
                        <signature>bool(string&amp;, System.Collections.Generic.List`1&lt;GamePlay.Internal.IProperty&gt;, System.Collections.Generic.List`1&lt;GamePlay.Internal.DBPropertyStorage&gt;, GamePlay.DBContent[])</signature>
                        <name>MakeTableContent</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(System.Collections.Generic.List`1&lt;GamePlay.Internal.DBPropertyStorage&gt;&amp;, string[], string[])</signature>
                        <name>MakeValidPropertys</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>GamePlay.DBContent[](string, string, bool)</signature>
                        <name>Select</name>
                    </method>
                    <method>
                        <signature>bool(string, string, GamePlay.DBContent[]&amp;, bool)</signature>
                        <name>TrySelect</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>UnloadData</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GamePlay.Internal.IDBPropertyConvertForStorage</signature>
                        <name>ConvertBase</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,GamePlay.UDBStorage/Data&gt;</signature>
                        <name>Datas</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.UDBStorage/Data</name>
                <newname>GamePlay.UDBStorage/a</newname>
                <methodlist>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;GamePlay.Internal.DBPropertyStorage&gt;, GamePlay.DBContent[])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string, object&amp;, bool)</signature>
                        <name>CheckoutCache</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Clear</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ClearCecheData</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(string, object, bool)</signature>
                        <name>SaveToCache</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>GamePlay.DBContent[]()</signature>
                        <name>get_DataArray</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;GamePlay.Internal.IProperty&gt;()</signature>
                        <name>get_Propertys</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;GamePlay.Internal.DBPropertyStorage&gt;()</signature>
                        <name>get_Storage</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(GamePlay.DBContent[])</signature>
                        <name>set_DataArray</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;GamePlay.Internal.IProperty&gt;)</signature>
                        <name>set_Propertys</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;GamePlay.Internal.DBPropertyStorage&gt;)</signature>
                        <name>set_Storage</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GamePlay.DBContent[]</signature>
                        <name>&lt;DataArray&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;GamePlay.Internal.IProperty&gt;</signature>
                        <name>&lt;Propertys&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;GamePlay.Internal.DBPropertyStorage&gt;</signature>
                        <name>&lt;Storage&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>GamePlay.Internal.DataCache</signature>
                        <name>Cache</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.UDataManager</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void(GamePlay.ILog)</signature>
                        <name>SetLog</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GamePlay.UConfig</signature>
                        <name>Config</name>
                    </field>
                    <field>
                        <signature>GamePlay.UConfigStorage</signature>
                        <name>ConfigStorage</name>
                    </field>
                    <field>
                        <signature>GamePlay.UDB</signature>
                        <name>Data</name>
                    </field>
                    <field>
                        <signature>GamePlay.UDBStorage</signature>
                        <name>DataStorage</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.UDownloadRequest</name>
                <methodlist>
                    <method>
                        <signature>void(UnityEngine.Networking.UnityWebRequest)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>GamePlay.UDownloadRequest(string, System.Collections.Generic.Dictionary`2&lt;string,string&gt;)</signature>
                        <name>Send</name>
                    </method>
                    <method>
                        <signature>GamePlay.UDownloadRequest(string, string)</signature>
                        <name>Send</name>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator(UnityEngine.Networking.UnityWebRequest)</signature>
                        <name>Start</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>void(System.Action`1&lt;GamePlay.UDownloadRequest&gt;)</signature>
                        <name>add_Completed</name>
                    </method>
                    <method>
                        <signature>unsigned int8[]()</signature>
                        <name>get_Bytes</name>
                    </method>
                    <method>
                        <signature>unsigned int64()</signature>
                        <name>get_DownloadBytes</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Error</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsSuccess</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_Progress</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Text</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Url</name>
                    </method>
                    <method>
                        <signature>void(System.Action`1&lt;GamePlay.UDownloadRequest&gt;)</signature>
                        <name>remove_Completed</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8[])</signature>
                        <name>set_Bytes</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int64)</signature>
                        <name>set_DownloadBytes</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Error</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Text</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Url</name>
                        <newname>x</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>&lt;Bytes&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>&lt;DownloadBytes&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Error&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Text&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Url&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Action`1&lt;GamePlay.UDownloadRequest&gt;</signature>
                        <name>Completed</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>Failed</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>FirstProgress</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>LastProgress</name>
                        <newname>h</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>unsigned int8[]()</signature>
                        <name>Bytes</name>
                    </property>
                    <property>
                        <signature>unsigned int64()</signature>
                        <name>DownloadBytes</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Error</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsSuccess</name>
                    </property>
                    <property>
                        <signature>float32()</signature>
                        <name>Progress</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Text</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Url</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>System.Action`1&lt;GamePlay.UDownloadRequest&gt;</signature>
                        <name>Completed</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>GamePlay.UDownloadRequest/&lt;Start&gt;d__31</name>
                <newname>GamePlay.UDownloadRequest/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;System.Object&gt;.get_Current</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>GamePlay.UDownloadRequest</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Networking.UnityWebRequest</signature>
                        <name>_request</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.UFileVersionRemote</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>FileName</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>MD5</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ModuleName</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>RelativePath</name>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>Size</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.UGameManager</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Awake</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Close</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>Exc</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetLocalContentRoot</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;System.Type&gt;, System.Func`3&lt;System.Type,string,object&gt;)</signature>
                        <name>InitCommander</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OnDestroy</name>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator(GamePlay.IGameManagerParent, object)</signature>
                        <name>Open</name>
                    </method>
                    <method>
                        <signature>void(System.Type)</signature>
                        <name>RegisterCmd</name>
                    </method>
                    <method>
                        <signature>void(UnityEngine.GameObject)</signature>
                        <name>RegisterOptionByChildren</name>
                    </method>
                    <method>
                        <signature>void(UnityEngine.GameObject)</signature>
                        <name>RegisterOptionObject</name>
                    </method>
                    <method>
                        <signature>void(System.Type)</signature>
                        <name>RegisterOptionTypes</name>
                    </method>
                    <method>
                        <signature>void(System.Type)</signature>
                        <name>UnregisterCmd</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Update</name>
                    </method>
                    <method>
                        <signature>GamePlay.UAssetBundleManager()</signature>
                        <name>get_AssetBundleMgr</name>
                    </method>
                    <method>
                        <signature>GamePlay.UAssetManager()</signature>
                        <name>get_AssetMgr</name>
                    </method>
                    <method>
                        <signature>GamePlay.UDataManager()</signature>
                        <name>get_DataMgr</name>
                    </method>
                    <method>
                        <signature>GamePlay.ULevelManager()</signature>
                        <name>get_LevelMgr</name>
                    </method>
                    <method>
                        <signature>GamePlay.UStageContainer()</signature>
                        <name>get_StageMgr</name>
                    </method>
                    <method>
                        <signature>GamePlay.UUIManager()</signature>
                        <name>get_UIMgr</name>
                    </method>
                    <method>
                        <signature>void(GamePlay.UAssetBundleManager)</signature>
                        <name>set_AssetBundleMgr</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(GamePlay.UAssetManager)</signature>
                        <name>set_AssetMgr</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(GamePlay.UDataManager)</signature>
                        <name>set_DataMgr</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(GamePlay.ULevelManager)</signature>
                        <name>set_LevelMgr</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(GamePlay.UStageContainer)</signature>
                        <name>set_StageMgr</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(GamePlay.UUIManager)</signature>
                        <name>set_UIMgr</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GamePlay.UAssetBundleManager</signature>
                        <name>&lt;AssetBundleMgr&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>GamePlay.UAssetManager</signature>
                        <name>&lt;AssetMgr&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>GamePlay.UDataManager</signature>
                        <name>&lt;DataMgr&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>GamePlay.ULevelManager</signature>
                        <name>&lt;LevelMgr&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>GamePlay.UStageContainer</signature>
                        <name>&lt;StageMgr&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>GamePlay.UUIManager</signature>
                        <name>&lt;UIMgr&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>AssetBundleExtension</name>
                    </field>
                    <field>
                        <signature>GamePlay.Internal.UCommandManager</signature>
                        <name>Commander</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>GameID</name>
                    </field>
                    <field>
                        <signature>GamePlay.IGameInstance</signature>
                        <name>Instance</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>IsDisposeAssetInQuit</name>
                    </field>
                    <field>
                        <signature>GamePlay.IGameManagerParent</signature>
                        <name>Parent</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>StageUpdateInterval</name>
                    </field>
                    <field>
                        <signature>GamePlay.Internal.UStartupManager</signature>
                        <name>Starter</name>
                        <newname>h</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>GamePlay.UAssetBundleManager()</signature>
                        <name>AssetBundleMgr</name>
                    </property>
                    <property>
                        <signature>GamePlay.UAssetManager()</signature>
                        <name>AssetMgr</name>
                    </property>
                    <property>
                        <signature>GamePlay.UDataManager()</signature>
                        <name>DataMgr</name>
                    </property>
                    <property>
                        <signature>GamePlay.ULevelManager()</signature>
                        <name>LevelMgr</name>
                    </property>
                    <property>
                        <signature>GamePlay.UStageContainer()</signature>
                        <name>StageMgr</name>
                    </property>
                    <property>
                        <signature>GamePlay.UUIManager()</signature>
                        <name>UIMgr</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GamePlay.UGameManager/&lt;Open&gt;d__34</name>
                <newname>GamePlay.UGameManager/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;System.Object&gt;.get_Current</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>GamePlay.UGameManager</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>_params</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>GamePlay.IGameManagerParent</signature>
                        <name>_parent</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.ULevel</name>
                <methodlist>
                    <method>
                        <signature>void(string, int32, GamePlay.ELoadLevelMode)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(UnityEngine.SceneManagement.Scene)</signature>
                        <name>SetBind</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>UnityEngine.SceneManagement.Scene()</signature>
                        <name>get_BindInstance</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Handle</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsBind</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>GamePlay.ELoadLevelMode()</signature>
                        <name>get_LoadMode</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Loaded</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>GamePlay.Internal.UUnityLevelRequest()</signature>
                        <name>get_Request</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(UnityEngine.SceneManagement.Scene)</signature>
                        <name>set_BindInstance</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Handle</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsBind</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(GamePlay.ELoadLevelMode)</signature>
                        <name>set_LoadMode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Name</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(GamePlay.Internal.UUnityLevelRequest)</signature>
                        <name>set_Request</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>UnityEngine.SceneManagement.Scene</signature>
                        <name>&lt;BindInstance&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;Handle&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsBind&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>GamePlay.ELoadLevelMode</signature>
                        <name>&lt;LoadMode&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Name&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>GamePlay.Internal.UUnityLevelRequest</signature>
                        <name>&lt;Request&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>UnityEngine.SceneManagement.Scene()</signature>
                        <name>BindInstance</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Handle</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsBind</name>
                    </property>
                    <property>
                        <signature>GamePlay.ELoadLevelMode()</signature>
                        <name>LoadMode</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Loaded</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>GamePlay.Internal.UUnityLevelRequest()</signature>
                        <name>Request</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GamePlay.ULevelManager</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>GamePlay.UAsyncOperation(GamePlay.ILevelLoader, string, GamePlay.ELoadLevelMode, System.Action)</signature>
                        <name>Load</name>
                    </method>
                    <method>
                        <signature>GamePlay.UAsyncOperation(string, GamePlay.ELoadLevelMode, System.Action)</signature>
                        <name>Load</name>
                    </method>
                    <method>
                        <signature>GamePlay.UAsyncOperation(GamePlay.ILevelLoader, string, GamePlay.ELoadLevelMode, System.Action)</signature>
                        <name>LoadAsync</name>
                    </method>
                    <method>
                        <signature>GamePlay.UAsyncOperation(string, GamePlay.ELoadLevelMode, System.Action)</signature>
                        <name>LoadAsync</name>
                    </method>
                    <method>
                        <signature>void(GamePlay.ILevelLoader)</signature>
                        <name>SetDefaultLoader</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>UnloadLevel</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GamePlay.Internal.ULevelContainer</signature>
                        <name>Container</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>GamePlay.ILevelLoader</signature>
                        <name>DefaultLoader</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.URemoteVersionRequest</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;GamePlay.UFileVersionRemote&gt;()</signature>
                        <name>get_Info</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsSuccess</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;GamePlay.UFileVersionRemote&gt;)</signature>
                        <name>set_Info</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsSuccess</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;GamePlay.UFileVersionRemote&gt;</signature>
                        <name>&lt;Info&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsSuccess&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;GamePlay.UFileVersionRemote&gt;()</signature>
                        <name>Info</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsSuccess</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GamePlay.UResourceRequest</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>!!0()</signature>
                        <name>GetAsset</name>
                    </method>
                    <method>
                        <signature>UnityEngine.Object()</signature>
                        <name>get_Asset</name>
                    </method>
                    <method>
                        <signature>GamePlay.IAssetRequest()</signature>
                        <name>get_AssetRequest</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>UnityEngine.Object()</signature>
                        <name>Asset</name>
                    </property>
                    <property>
                        <signature>GamePlay.IAssetRequest()</signature>
                        <name>AssetRequest</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GamePlay.UStage</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>GamePlay.Internal.IStage.Close</name>
                    </method>
                    <method>
                        <signature>GamePlay.UAsyncOperation()</signature>
                        <name>GamePlay.Internal.IStage.Load</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>GamePlay.Internal.IStage.Open</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>GamePlay.Internal.IStage.Unload</name>
                    </method>
                    <method>
                        <signature>GamePlay.EStageStatus()</signature>
                        <name>GamePlay.Internal.IStage.get_NextState</name>
                    </method>
                    <method>
                        <signature>GamePlay.UAsyncOperation()</signature>
                        <name>GamePlay.Internal.IStage.get_Progress</name>
                    </method>
                    <method>
                        <signature>GamePlay.EStageStatus()</signature>
                        <name>GamePlay.Internal.IStage.get_State</name>
                    </method>
                    <method>
                        <signature>void(GamePlay.EStageStatus)</signature>
                        <name>GamePlay.Internal.IStage.set_NextState</name>
                    </method>
                    <method>
                        <signature>void(GamePlay.UAsyncOperation)</signature>
                        <name>GamePlay.Internal.IStage.set_Progress</name>
                    </method>
                    <method>
                        <signature>void(GamePlay.EStageStatus)</signature>
                        <name>GamePlay.Internal.IStage.set_State</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OnClose</name>
                    </method>
                    <method>
                        <signature>GamePlay.UAsyncOperation()</signature>
                        <name>OnLoad</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OnOpen</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OnUnload</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GamePlay.EStageStatus</signature>
                        <name>&lt;GamePlay.Internal.IStage.NextState&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>GamePlay.UAsyncOperation</signature>
                        <name>&lt;GamePlay.Internal.IStage.Progress&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>GamePlay.EStageStatus</signature>
                        <name>&lt;GamePlay.Internal.IStage.State&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>GamePlay.EStageStatus()</signature>
                        <name>GamePlay.Internal.IStage.NextState</name>
                    </property>
                    <property>
                        <signature>GamePlay.UAsyncOperation()</signature>
                        <name>GamePlay.Internal.IStage.Progress</name>
                    </property>
                    <property>
                        <signature>GamePlay.EStageStatus()</signature>
                        <name>GamePlay.Internal.IStage.State</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GamePlay.UStageContainer</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>Close</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>Close</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CloseAll</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>GamePlay.UStage(GamePlay.Internal.IStage)</signature>
                        <name>Get</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>GamePlay.UAsyncOperation(System.Collections.Generic.List`1&lt;string&gt;, System.Action`1&lt;GamePlay.UStage&gt;, System.Action)</signature>
                        <name>Load</name>
                    </method>
                    <method>
                        <signature>GamePlay.UAsyncOperation(string, System.Action`1&lt;GamePlay.UStage&gt;)</signature>
                        <name>Load</name>
                    </method>
                    <method>
                        <signature>GamePlay.UAsyncOperation(System.Action`1&lt;GamePlay.UStage&gt;, System.Action)</signature>
                        <name>LoadAll</name>
                    </method>
                    <method>
                        <signature>GamePlay.UAsyncOperation(GamePlay.Internal.IStage, System.Action`1&lt;GamePlay.UStage&gt;, System.Action`1&lt;GamePlay.Internal.IStage&gt;)</signature>
                        <name>LoadStage</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>GamePlay.UAsyncOperation(string, System.Action`1&lt;GamePlay.UStage&gt;, System.Action`1&lt;GamePlay.Internal.IStage&gt;)</signature>
                        <name>LoadStage</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(GamePlay.Internal.IStage)</signature>
                        <name>OnStageLoaded</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>GamePlay.UAsyncOperation(System.Collections.Generic.List`1&lt;string&gt;, System.Action`1&lt;GamePlay.UStage&gt;, System.Action)</signature>
                        <name>Open</name>
                    </method>
                    <method>
                        <signature>GamePlay.UAsyncOperation(string, System.Action`1&lt;GamePlay.UStage&gt;)</signature>
                        <name>Open</name>
                    </method>
                    <method>
                        <signature>GamePlay.UAsyncOperation(System.Action`1&lt;GamePlay.UStage&gt;, System.Action)</signature>
                        <name>OpenAll</name>
                    </method>
                    <method>
                        <signature>void(string, GamePlay.UStage)</signature>
                        <name>RegisterStage</name>
                    </method>
                    <method>
                        <signature>void(GamePlay.Internal.IStage)</signature>
                        <name>SetClose</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(GamePlay.Internal.IStage)</signature>
                        <name>SetUnload</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(float32)</signature>
                        <name>SetUpdateInterval</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>Unload</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>Unload</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UnloadAll</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>UnregisterStage</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Update</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float32</signature>
                        <name>Interval</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,GamePlay.Internal.IStage&gt;</signature>
                        <name>Stages</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>Timer</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.UStageContainer/&lt;&gt;c</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(GamePlay.Internal.IStage)</signature>
                        <name>&lt;Open&gt;b__11_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(GamePlay.Internal.IStage)</signature>
                        <name>&lt;Open&gt;b__7_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(GamePlay.Internal.IStage)</signature>
                        <name>&lt;OpenAll&gt;b__15_0</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GamePlay.UStageContainer/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                    </field>
                    <field>
                        <signature>System.Action`1&lt;GamePlay.Internal.IStage&gt;</signature>
                        <name>&lt;&gt;9__11_0</name>
                    </field>
                    <field>
                        <signature>System.Action`1&lt;GamePlay.Internal.IStage&gt;</signature>
                        <name>&lt;&gt;9__15_0</name>
                    </field>
                    <field>
                        <signature>System.Action`1&lt;GamePlay.Internal.IStage&gt;</signature>
                        <name>&lt;&gt;9__7_0</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.UUIContainer</name>
                <methodlist>
                    <method>
                        <signature>void(GamePlay.UUIManager)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(GamePlay.Internal.UUIWorker, GamePlay.Internal.EWorkerState)</signature>
                        <name>AddedToContainer</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string, bool)</signature>
                        <name>Close</name>
                    </method>
                    <method>
                        <signature>bool(GamePlay.Internal.UUIWorker)</signature>
                        <name>Contains</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>GamePlay.UUIRequest(string, bool, GamePlay.EOpenMode)</signature>
                        <name>Load</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>GamePlay.Internal.UUIWorker(GamePlay.UUIInfoAssetBundle, GamePlay.Internal.EWorkerState, System.Action`2&lt;GamePlay.Internal.UUIWorker,UnityEngine.GameObject&gt;)</signature>
                        <name>LoadFromAssetBundle</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>GamePlay.Internal.UUIWorker(GamePlay.UUIInfoResource, GamePlay.Internal.EWorkerState, System.Action`2&lt;GamePlay.Internal.UUIWorker,UnityEngine.GameObject&gt;)</signature>
                        <name>LoadFromResource</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>GamePlay.Internal.UUIWorker(GamePlay.UUIInfoStaticSingle, GamePlay.Internal.EWorkerState, System.Action`2&lt;GamePlay.Internal.UUIWorker,UnityEngine.GameObject&gt;)</signature>
                        <name>LoadFromStaticSingle</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>GamePlay.Internal.UUIWorker(GamePlay.UUIInfoStaticTemplate, GamePlay.Internal.EWorkerState, System.Action`2&lt;GamePlay.Internal.UUIWorker,UnityEngine.GameObject&gt;)</signature>
                        <name>LoadFromStaticTemplate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>GamePlay.Internal.UUIWorker(GamePlay.UUIInfo, GamePlay.Internal.EWorkerState, System.Action`2&lt;GamePlay.Internal.UUIWorker,UnityEngine.GameObject&gt;)</signature>
                        <name>LoadUI</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(GamePlay.Internal.UUIWorker, bool)</signature>
                        <name>OnWorkerClose</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(GamePlay.Internal.UUIWorker)</signature>
                        <name>OnWorkerDestroy</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>GamePlay.UUIRequest(string, bool, GamePlay.EOpenMode)</signature>
                        <name>Open</name>
                    </method>
                    <method>
                        <signature>GamePlay.UUIRequest(string)</signature>
                        <name>PreLoad</name>
                    </method>
                    <method>
                        <signature>void(GamePlay.Internal.UUIWorker)</signature>
                        <name>RemoveFromContainer</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(GamePlay.UUIInfoStaticSingle, GamePlay.Internal.UUIWorker&amp;)</signature>
                        <name>TryGetWoker</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string, GamePlay.Internal.UUIWorker&amp;)</signature>
                        <name>TryGetWoker</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(GamePlay.UUIInfo)</signature>
                        <name>UnloadResourceByInfo</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(GamePlay.Internal.UUIWorker, UnityEngine.GameObject)</signature>
                        <name>UnloadWorker</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Update</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;GamePlay.Internal.UUIWorker&gt;</signature>
                        <name>Container</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>GamePlay.UUIManager</signature>
                        <name>Manager</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;GamePlay.Internal.UUIWorker&gt;</signature>
                        <name>WorkLine</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.UUIContainer/&lt;&gt;c__DisplayClass19_0</name>
                <newname>GamePlay.UUIContainer/c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(GamePlay.Internal.UUIWorker)</signature>
                        <name>&lt;TryGetWoker&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>_name</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.UUIContainer/&lt;&gt;c__DisplayClass20_0</name>
                <newname>GamePlay.UUIContainer/d</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(GamePlay.Internal.UUIWorker)</signature>
                        <name>&lt;TryGetWoker&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GamePlay.UUIInfoStaticSingle</signature>
                        <name>_info</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.UUIContainer/&lt;&gt;c__DisplayClass6_0</name>
                <newname>GamePlay.UUIContainer/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(GamePlay.Internal.UUIWorker)</signature>
                        <name>&lt;Close&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>_name</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.UUIContainer/&lt;&gt;c__DisplayClass9_0</name>
                <newname>GamePlay.UUIContainer/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(GamePlay.Internal.UUIWorker, UnityEngine.GameObject)</signature>
                        <name>&lt;Load&gt;b__0</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>bool(GamePlay.Internal.UUIWorker)</signature>
                        <name>&lt;Load&gt;b__1</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GamePlay.UUIContainer</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_name</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>GamePlay.UUIInfo</signature>
                        <name>outUIInfo</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>GamePlay.Internal.UUIWorker</signature>
                        <name>worker</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.UUICustomDepth</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(UnityEngine.Transform, UnityEngine.Transform)</signature>
                        <name>SetUpward</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>Depth</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.UUICustomDepth/&lt;&gt;c</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(GamePlay.UUICustomDepth, GamePlay.UUICustomDepth)</signature>
                        <name>&lt;SetUpward&gt;b__1_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(GamePlay.UUICustomDepth, GamePlay.UUICustomDepth)</signature>
                        <name>&lt;SetUpward&gt;b__1_1</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GamePlay.UUICustomDepth/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                    </field>
                    <field>
                        <signature>System.Comparison`1&lt;GamePlay.UUICustomDepth&gt;</signature>
                        <name>&lt;&gt;9__1_0</name>
                    </field>
                    <field>
                        <signature>System.Comparison`1&lt;GamePlay.UUICustomDepth&gt;</signature>
                        <name>&lt;&gt;9__1_1</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.UUIInfo</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetName</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>IsSceneObject</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.UUIInfoAssetBundle</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetLoaderName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetName</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>AssetName</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>LoaderName</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>PackageName</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ProxyName</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>UIName</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.UUIInfoResource</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetName</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>DIR</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Name</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.UUIInfoStaticSingle</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetName</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>UnityEngine.GameObject</signature>
                        <name>Instance</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>UIName</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.UUIInfoStaticTemplate</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetName</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>UnityEngine.GameObject</signature>
                        <name>Instance</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>UIName</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.UUIManager</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, bool)</signature>
                        <name>Close</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>CreateContainer</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>UnityEngine.GameObject(string)</signature>
                        <name>FindLayer</name>
                    </method>
                    <method>
                        <signature>UnityEngine.GameObject(string)</signature>
                        <name>GamePlay.Internal.IUIM.FindLayer</name>
                    </method>
                    <method>
                        <signature>void(GamePlay.Internal.IUI, bool)</signature>
                        <name>GamePlay.Internal.IUIM.OnCloseUI</name>
                    </method>
                    <method>
                        <signature>void(GamePlay.Internal.IUI)</signature>
                        <name>GamePlay.Internal.IUIM.OnDestroyUI</name>
                    </method>
                    <method>
                        <signature>GamePlay.UUIContainer(string)</signature>
                        <name>GetContainer</name>
                    </method>
                    <method>
                        <signature>void(GamePlay.UAssetManager, GamePlay.UAssetBundleManager)</signature>
                        <name>Initialized</name>
                    </method>
                    <method>
                        <signature>GamePlay.UUIRequest(string, bool, GamePlay.EOpenMode)</signature>
                        <name>Open</name>
                    </method>
                    <method>
                        <signature>GamePlay.UUIRequest(string)</signature>
                        <name>PreLoad</name>
                    </method>
                    <method>
                        <signature>void(string, UnityEngine.GameObject)</signature>
                        <name>RegisterLayer</name>
                    </method>
                    <method>
                        <signature>void(GamePlay.UUIInfo)</signature>
                        <name>RegisterUIInfo</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>TestDispose</name>
                    </method>
                    <method>
                        <signature>bool(GamePlay.Internal.UUIWorker, GamePlay.UUIContainer&amp;)</signature>
                        <name>TryGetContainerByWorker</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string, UnityEngine.GameObject&amp;)</signature>
                        <name>TryGetLayer</name>
                    </method>
                    <method>
                        <signature>bool(GamePlay.UUIInfoStaticSingle, GamePlay.UUIContainer&amp;, GamePlay.Internal.UUIWorker&amp;)</signature>
                        <name>TryGetSingleWorker</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string, GamePlay.UUIInfo&amp;)</signature>
                        <name>TryGetUIInfo</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>UnregisterLayer</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>UnregisterUIInfo</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Update</name>
                    </method>
                    <method>
                        <signature>GamePlay.UAssetBundleManager()</signature>
                        <name>get_AssetBundleManager</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>GamePlay.UAssetManager()</signature>
                        <name>get_AssetManager</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GamePlay.UAssetBundleManager</signature>
                        <name>AssetBundleMgr</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>GamePlay.UAssetManager</signature>
                        <name>AssetMgr</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,GamePlay.UUIContainer&gt;</signature>
                        <name>Containers</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>GamePlay.UUIContainer</signature>
                        <name>DefaultContainer</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,GamePlay.UUIInfo&gt;</signature>
                        <name>Informations</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,UnityEngine.GameObject&gt;</signature>
                        <name>Layers</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>GamePlay.UAssetBundleManager()</signature>
                        <name>AssetBundleManager</name>
                    </property>
                    <property>
                        <signature>GamePlay.UAssetManager()</signature>
                        <name>AssetManager</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GamePlay.UUIPlay</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Action)</signature>
                        <name>Play</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Stop</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.UUIRequest</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>UnityEngine.GameObject()</signature>
                        <name>get_UI</name>
                    </method>
                    <method>
                        <signature>void(UnityEngine.GameObject)</signature>
                        <name>set_UI</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>UnityEngine.GameObject</signature>
                        <name>&lt;UI&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>UnityEngine.GameObject()</signature>
                        <name>UI</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GamePlay.UUIView</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;GamePlay.Internal.IUI.Close&gt;b__17_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>CloseSelf</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>GamePlay.Internal.IUI.Close</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>GamePlay.Internal.IUI.Downward</name>
                    </method>
                    <method>
                        <signature>void(GamePlay.Internal.IUIM, UnityEngine.GameObject)</signature>
                        <name>GamePlay.Internal.IUI.Loaded</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>GamePlay.Internal.IUI.Open</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>GamePlay.Internal.IUI.Unload</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>GamePlay.Internal.IUI.Upward</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>GamePlay.Internal.IUI.get_CanDestroy</name>
                    </method>
                    <method>
                        <signature>GamePlay.EUIExitMode()</signature>
                        <name>GamePlay.Internal.IUI.get_ExitMode</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>GamePlay.Internal.IUI.get_ExitTime</name>
                    </method>
                    <method>
                        <signature>UnityEngine.GameObject()</signature>
                        <name>GamePlay.Internal.IUI.get_Root</name>
                    </method>
                    <method>
                        <signature>GamePlay.Internal.UUIWorker()</signature>
                        <name>GamePlay.Internal.IUI.get_Worker</name>
                    </method>
                    <method>
                        <signature>void(GamePlay.Internal.UUIWorker)</signature>
                        <name>GamePlay.Internal.IUI.set_Worker</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OnClose</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OnDestroy</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OnDownward</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OnLoad</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OnLoadCompleted</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OnOpen</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OnPreClose</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OnPreOpen</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OnUnload</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OnUpward</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ResetDepth</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GamePlay.Internal.UUIWorker</signature>
                        <name>&lt;GamePlay.Internal.IUI.Worker&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>CanDestroy</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>GamePlay.UUIViewInfoData</signature>
                        <name>Info</name>
                    </field>
                    <field>
                        <signature>GamePlay.Internal.IUIM</signature>
                        <name>Manager</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>GamePlay.Internal.IUI.CanDestroy</name>
                    </property>
                    <property>
                        <signature>GamePlay.EUIExitMode()</signature>
                        <name>GamePlay.Internal.IUI.ExitMode</name>
                    </property>
                    <property>
                        <signature>float32()</signature>
                        <name>GamePlay.Internal.IUI.ExitTime</name>
                    </property>
                    <property>
                        <signature>UnityEngine.GameObject()</signature>
                        <name>GamePlay.Internal.IUI.Root</name>
                    </property>
                    <property>
                        <signature>GamePlay.Internal.UUIWorker()</signature>
                        <name>GamePlay.Internal.IUI.Worker</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GamePlay.UUIViewInfoData</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GamePlay.UUIPlay</signature>
                        <name>EntryEffect</name>
                    </field>
                    <field>
                        <signature>GamePlay.EUIExitMode</signature>
                        <name>ExitMode</name>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>ExitTime</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Layer</name>
                    </field>
                    <field>
                        <signature>GamePlay.UUIPlay</signature>
                        <name>LeaveEffect</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>Order</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>ResetDepthUpward</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.UUpdateInformation</name>
                <methodlist>
                    <method>
                        <signature>GamePlay.UUpdateInformation(string, System.Collections.Generic.List`1&lt;GamePlay.UFileVersionRemote&gt;)</signature>
                        <name>GetInstance</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>unsigned int64()</signature>
                        <name>get_Bytes</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Count</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsUpdate</name>
                    </method>
                    <method>
                        <signature>void(unsigned int64)</signature>
                        <name>set_Bytes</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Count</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsUpdate</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>&lt;Bytes&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;Count&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsUpdate&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>AssetPath</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;GamePlay.UFileVersionRemote&gt;</signature>
                        <name>FinalFiles</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>unsigned int64()</signature>
                        <name>Bytes</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Count</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsUpdate</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GamePlay.UUpdateProgress</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>AllBytes</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>AllCount</name>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>DownloadedBytes</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DownloadedCount</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FileName</name>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>FluxBytes</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ModuleName</name>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>Progress</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.UUpdateSystem</name>
                <newname>a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>GamePlay.UAsyncOperation(GamePlay.UUpdateInformation, string, string, System.Action`1&lt;GamePlay.UUpdateProgress&gt;, System.Action`2&lt;bool,string&gt;)</signature>
                        <name>Apply</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>GamePlay.URemoteVersionRequest(string, System.Action`1&lt;GamePlay.URemoteVersionRequest&gt;, string, float32)</signature>
                        <name>DownloadVersionFile</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>GamePlay.UUpdateInformation(string, System.Collections.Generic.List`1&lt;GamePlay.UFileVersionRemote&gt;)</signature>
                        <name>GetUpdateInformation</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;GamePlay.UFileVersionRemote&gt;(System.Collections.Generic.List`1&lt;GamePlay.UFileVersionRemote&gt;, System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>GetVersionList</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,System.Collections.Generic.List`1&lt;GamePlay.UFileVersionRemote&gt;&gt;(System.Collections.Generic.List`1&lt;GamePlay.UFileVersionRemote&gt;, System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>GetVersionMap</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,GamePlay.Internal.FileVersionUpdateInfo&gt;</signature>
                        <name>VersionFiles</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.UUpdateSystem/&lt;&gt;c__DisplayClass1_0</name>
                <newname>a/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](unsigned int8[])</signature>
                        <name>&lt;DownloadVersionFile&gt;b__0</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>&lt;DownloadVersionFile&gt;b__1</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>_password</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>GamePlay.Internal.FileVersionUpdateInfo</signature>
                        <name>outInfo</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.UUploadFile</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>Bytes</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FieldName</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FileName</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>MiniType</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GamePlay.UUploadRequest</name>
                <methodlist>
                    <method>
                        <signature>void(UnityEngine.Networking.UnityWebRequest, unsigned int64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>GamePlay.UUploadRequest(string, System.Collections.Generic.Dictionary`2&lt;string,string&gt;, System.Collections.Generic.List`1&lt;GamePlay.UUploadFile&gt;)</signature>
                        <name>Send</name>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator(UnityEngine.Networking.UnityWebRequest)</signature>
                        <name>Start</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>void(System.Action`1&lt;GamePlay.UUploadRequest&gt;)</signature>
                        <name>add_Completed</name>
                    </method>
                    <method>
                        <signature>unsigned int64()</signature>
                        <name>get_AllBytes</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Error</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsSuccess</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_Progress</name>
                    </method>
                    <method>
                        <signature>unsigned int64()</signature>
                        <name>get_UploadBytes</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Url</name>
                    </method>
                    <method>
                        <signature>void(System.Action`1&lt;GamePlay.UUploadRequest&gt;)</signature>
                        <name>remove_Completed</name>
                    </method>
                    <method>
                        <signature>void(unsigned int64)</signature>
                        <name>set_AllBytes</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Error</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int64)</signature>
                        <name>set_UploadBytes</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Url</name>
                        <newname>w</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>&lt;AllBytes&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Error&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>&lt;UploadBytes&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Url&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Action`1&lt;GamePlay.UUploadRequest&gt;</signature>
                        <name>Completed</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>Failed</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>FirstProgress</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>LastProgress</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>unsigned int64()</signature>
                        <name>AllBytes</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Error</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsSuccess</name>
                    </property>
                    <property>
                        <signature>float32()</signature>
                        <name>Progress</name>
                    </property>
                    <property>
                        <signature>unsigned int64()</signature>
                        <name>UploadBytes</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Url</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>System.Action`1&lt;GamePlay.UUploadRequest&gt;</signature>
                        <name>Completed</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>GamePlay.UUploadRequest/&lt;Start&gt;d__27</name>
                <newname>GamePlay.UUploadRequest/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;System.Object&gt;.get_Current</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>GamePlay.UUploadRequest</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>UnityEngine.Networking.UnityWebRequest</signature>
                        <name>_request</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
        </module>
    </mapping>
    <statistics>
        <statisticline>
            <description>Total Classes</description>
            <statistic>184</statistic>
        </statisticline>
        <statisticline>
            <description>Total Methods</description>
            <statistic>1119</statistic>
        </statisticline>
        <statisticline>
            <description>Total Fields</description>
            <statistic>468</statistic>
        </statisticline>
        <statisticline>
            <description>Total Properties</description>
            <statistic>76</statistic>
        </statisticline>
        <statisticline>
            <description>Total Events</description>
            <statistic>2</statistic>
        </statisticline>
        <statisticline>
            <description>Total Classes Renamed</description>
            <statistic>124</statistic>
            <statistic>67.39 %</statistic>
        </statisticline>
        <statisticline>
            <description>Total Methods Renamed</description>
            <statistic>608</statistic>
            <statistic>54.33 %</statistic>
        </statisticline>
        <statisticline>
            <description>Total Fields Renamed</description>
            <statistic>380</statistic>
            <statistic>81.20 %</statistic>
        </statisticline>
        <statisticline>
            <description>Total Properties Renamed</description>
            <statistic>0</statistic>
            <statistic>0.00 %</statistic>
        </statisticline>
        <statisticline>
            <description>Total Events Renamed</description>
            <statistic>0</statistic>
            <statistic>0.00 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'a'</description>
            <statistic>196</statistic>
            <statistic>17.52 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'b'</description>
            <statistic>101</statistic>
            <statistic>9.03 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'd'</description>
            <statistic>55</statistic>
            <statistic>4.92 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'c'</description>
            <statistic>47</statistic>
            <statistic>4.20 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'f'</description>
            <statistic>40</statistic>
            <statistic>3.57 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'v'</description>
            <statistic>31</statistic>
            <statistic>2.77 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'e'</description>
            <statistic>28</statistic>
            <statistic>2.50 %</statistic>
        </statisticline>
    </statistics>
</dotfuscatorMap>